{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/worker.ts","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./node_modules/ivi-core/src/user_agent.ts","webpack:///./node_modules/ivi-core/src/array.ts","webpack:///./node_modules/ivi-core/src/noop.ts","webpack:///./node_modules/ivi-core/src/error.ts","webpack:///./node_modules/ivi-core/src/repeatable_task_list.ts","webpack:///./node_modules/ivi-scheduler/src/index.ts","webpack:///./node_modules/ivi-core/src/shortcuts.ts","webpack:///./node_modules/ivi-core/src/const.ts","webpack:///./node_modules/ivi/src/events/sync_events.ts","webpack:///./node_modules/ivi/src/vdom/vnode.ts","webpack:///./node_modules/ivi/src/vdom/sync_dom.ts","webpack:///./node_modules/ivi/src/vdom/implementation.ts","webpack:///./node_modules/ivi/src/vdom/root.ts","webpack:///./node_modules/ivi/src/vdom/vnode_factories.ts","webpack:///./node_modules/ivi/src/events/accumulate_dispatch_targets.ts","webpack:///./node_modules/ivi/src/events/dispatch_event.ts","webpack:///./node_modules/ivi-core/src/feature_detection.ts","webpack:///./node_modules/ivi/src/events/utils.ts","webpack:///./node_modules/ivi/src/events/synthetic_event.ts","webpack:///./node_modules/ivi/src/events/synthetic_native_event.ts","webpack:///./node_modules/ivi/src/events/native_event_dispatcher.ts","webpack:///./node_modules/ivi/src/events/native_events.ts","webpack:///./node_modules/ivi/src/vdom/component.ts","webpack:///./node_modules/ivi-html/src/index.ts","webpack:///./src/main.ts","webpack:///./node_modules/ivi/src/vdom/vnode_collections.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Worker","extendStatics","setPrototypeOf","__proto__","Array","b","__extends","__","this","constructor","__assign","assign","arguments","length","ua","navigator","userAgent","IOS_UA","test","window","unorderedArrayDelete","array","index","last","pop","NOOP","ERROR_HANDLERS","catchError","fn","args","_i","apply","e","_a","ERROR_HANDLERS_1","handler","runRepeatableTasks","tasks","run","a","tasks_1","task","_isHidden","_flags","_microtasks","_tasks","_visibilityObservers","_animations","_readers","_updateDOMHandler","_currentFrame","f","w","_nextFrame","_autofocusedElement","runMicrotasks","MessageChannel","port1","onmessage","ev","handleVisibilityChange","newHidden","requestNextFrame","observers","_requestNextFrame","requestAnimationFrame","_handleNextFrame","Promise","resolve","then","push","document","hidden","addEventListener","time","frame","focus","addFrameTaskUpdate","triggerNextFrame","performance","now","nodeProto","Node","elementProto","Element","nodeInsertBefore","insertBefore","nodeRemoveChild","removeChild","nodeReplaceChild","replaceChild","nodeCloneNode","cloneNode","elementSetAttribute","setAttribute","elementSetAttributeNS","setAttributeNS","elementRemoveAttribute","removeAttribute","SVG_NAMESPACE","XLINK_NAMESPACE","XML_NAMESPACE","attachEvents","events","h","registerEventHandler","detachEvents","unregisterEventHandler","src","add","remove","VNode","flags","tag","props","className","children","_f","_l","_r","_c","_t","_k","_p","_cs","_s","_e","k","style","attrs","first","prev","unsafeHTML","html","getDOMInstanceFromVNode","node","syncStyle","bValue","undefined","setProperty","removeProperty","setDOMAttribute","svg","charCodeAt","startsWith","syncDOMAttrs","removeVNode","parent","vnode","_detach","_attach","child","attached","component","detached","dirtyCheck","context","dirtyContext","instance","deepUpdate","syncVNode","render","updated","connect","selectData","select","_removeAllChildren","firstVNode","textContent","_setInputValue","input","checked","_render","createTextNode","createElementNS","createElement","innerHTML","autofocus","renderVNode","refChild","aFlags","bFlags","aChild","bChild","data","h1","h2","syncEvents","aStartVNode","bStartVNode","aEndVNode","bEndVNode","step1Synced","outer","next","nextNode","aInnerLength","bInnerLength","lastPosition","bInnerArray","explicitKeyIndex","implicitKeyIndex","Map","set","prevPositionsForB","fill","step2Synced","seq","u","v","j","slice","result","lis","_syncChildrenTrackByKeys","oldProps","newProps","newPropsReceived","shouldUpdate","prevSelectData","sc","ROOTS","EMPTY_CONTEXT","_pendingUpdate","_update","update","root","container","currentVNode","invalidated","newVNode","onclick","indexOf","updateNextFrame","addFrameTaskWrite","vnode_factories_connect","descriptor","visitMatchingDOMTargets","match","nodes","accumulateDispatchTargetsFromVNode","target","handlers","isArray","count","events_1","dispatchEventToLocalEventHandlers","event","matchFlags","dispatch","handlers_1","_dispatch","PASSIVE_EVENTS","opts","KeyboardEvent","MouseEvent","EVENT_CAPTURE_PASSIVE_OPTIONS","capture","passive","EVENT_CAPTURE_ACTIVE_OPTIONS","EVENT_PASSIVE_OPTIONS","EVENT_ACTIVE_OPTIONS","getNativeEventOptions","synthetic_native_event_SyntheticNativeEvent","_super","SyntheticNativeEvent","timestamp","native","_this","dispatchToListeners","listeners","cbs_1","cb","EVENT_DISPATCHER_INPUT","source","deps","incDependencies","removeEventListener","decDependencies","before","after","matchEventSource","domTarget","correspondingUseElement","getEventTarget","targets","ROOTS_1","contains","domTargets","parentNode","accumulateDispatchTargets","syntheticEvent","timeStamp","bubble","dispatchEvent","preventDefault","createNativeEventDispatcher","component_Component","Component","local","invalidate","div","WORKER","STATE","appState","workerState","queryId","results","PLACEHOLDER","placeholder","SearchField","class_1","query","postMessage","id","type","state","createNativeEventHandler","Result","score","comment","author","body","SearchResults","map","App","workerStateToText","findRoot","renderNextFrame","getElementById"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"20fa8a724c4344169f4e.worker.js\");\n};","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/**\n * User Agent detection is used to fix some quirks like iOS event bubbling, etc.\n *\n * NOTE: Do not implement any browser detection that aren't used in `ivi` library.\n */\n\nconst ua = navigator.userAgent;\n\n/**\n * iOS User Agent.\n */\nexport const IOS_UA = (TARGET !== \"electron\") && (/iPad|iPhone|iPod/.test(ua) && !(\"MSStream\" in window));\n","/**\n * append pushes item to an array and automatically create a new array when it doesn't exist.\n *\n * @param array Array\n * @param item Item\n * @returns Array\n */\nexport function append<T>(array: T[] | null, item: T): T[] {\n  if (array === null) {\n    return [item];\n  }\n  array.push(item);\n  return array;\n}\n\n/**\n * unorderedArrayDelete deletes element from an array with O(1) complexity.\n *\n * It swaps element at `index` position with the last element and removes the last one.\n *\n * @param array Array\n * @param index Index of an element to remove\n */\nexport function unorderedArrayDelete<T>(array: T[], index: number): void {\n  const length = array.length - 1;\n  const last = array.pop();\n  if (index !== length) {\n    array[index] = last!;\n  }\n}\n","/**\n * NOOP function.\n */\nexport function NOOP(): void {\n  /* tslint:disable:no-empty */\n  /* tslint:enable:no-empty */\n}\n\n/**\n * NOOP_FALSE function always returns `false` value.\n *\n * @returns `false` value.\n */\nexport function NOOP_FALSE(): boolean {\n  return false;\n}\n","const ERROR_HANDLERS: Array<(e: any) => void> = [];\n\n/**\n * addErrorHandler adds an error handler for errors catched by functions decorated with `catchError()`.\n *\n * @param handler error handler.\n */\nexport function addErrorHandler(handler: (e: any) => void): void {\n  ERROR_HANDLERS.push(handler);\n}\n\n/**\n * catchError is a decorator that catches exceptions and invokes error handlers registered with `addErrorHandler()`.\n *\n * @noinline\n * @throws\n * @param fn function to decorate.\n * @returns function decorated with a catchError.\n */\nexport function catchError<T>(fn: (...args: any[]) => T): (...args: any[]) => T {\n  return (...args: any[]) => {\n    try {\n      return fn(...args);\n    } catch (e) {\n      for (const handler of ERROR_HANDLERS) {\n        handler(e);\n      }\n      throw e;\n    }\n  };\n}\n","import { unorderedArrayDelete } from \"./array\";\n\n/**\n * RepeatableTaskList is a data structure for tasks that will be repeated until they return `true` value.\n */\nexport type RepeatableTaskList = Array<() => boolean | undefined>;\n\n/**\n * runRepeatableTasks runs repeatable tasks.\n *\n * @param tasks repeatable tasks.\n */\nexport function runRepeatableTasks(tasks: RepeatableTaskList): void {\n  for (let i = 0; i < tasks.length; ++i) {\n    if (tasks[i]() === true) {\n      unorderedArrayDelete(tasks, i--);\n    }\n  }\n}\n","import { RepeatableTaskList, runRepeatableTasks, NOOP, unorderedArrayDelete, catchError } from \"ivi-core\";\n\n/**\n * Scheduler flags.\n */\nconst enum SchedulerFlags {\n  Hidden = 1,\n  VisibilityObserversCOW = 1 << 1,\n  MicrotaskPending = 1 << 2,\n  TaskPending = 1 << 3,\n  NextFramePending = 1 << 4,\n  CurrentFrameReady = 1 << 5,\n}\n\n/**\n * Frame Tasks Group flags.\n */\nconst enum FrameTasksGroupFlags {\n  /**\n   * Group contains update task.\n   */\n  Update = 1,\n  /**\n   * Group contains \"write\" tasks.\n   */\n  Write = 1 << 1,\n  /**\n   * Group contains \"read\" tasks\".\n   */\n  Read = 1 << 2,\n  /**\n   * Group contains \"after\" tasks.\n   */\n  After = 1 << 3,\n}\n\ninterface TaskList {\n  a: Array<() => void>;\n}\n\n/**\n * createTaskList creates a task list.\n *\n * @returns Task list.\n */\nfunction createTaskList(): TaskList {\n  return { a: [] };\n}\n\nfunction run(t: TaskList) {\n  const tasks = t.a;\n  t.a = [];\n  for (const task of tasks) {\n    task();\n  }\n}\n\n/**\n * FrameTasksGroup contains tasks for read and write DOM tasks, and tasks that should be executed after all other tasks\n * are finished.\n *\n * @final\n */\ninterface FrameTasksGroup {\n  /**\n   * See `FrameTasksGroupFlags` for details.\n   */\n  f: number;\n  /**\n   * Write DOM task queue.\n   */\n  w: TaskList;\n  /**\n   * Read DOM task queue.\n   */\n  r: TaskList;\n  /**\n   * Tasks that should be executed when all other frame tasks are finished.\n   */\n  a: TaskList;\n}\n\nfunction createFrameTasksGroup(): FrameTasksGroup {\n  return {\n    f: 0,\n    w: createTaskList(),\n    r: createTaskList(),\n    a: createTaskList(),\n  };\n}\n\nlet _flags: SchedulerFlags = 0;\nlet _clock = 0;\nconst _microtasks = createTaskList();\nconst _tasks = createTaskList();\n\nlet _visibilityObservers: Array<(hidden: boolean) => void> = [];\nlet _isHidden: () => boolean;\n\nconst _animations: RepeatableTaskList = [];\nconst _readers: RepeatableTaskList = [];\nlet _updateDOMHandler: () => void = NOOP;\nlet _currentFrame = createFrameTasksGroup();\nlet _nextFrame = createFrameTasksGroup();\nlet _currentFrameStartTime = 0;\nlet _autofocusedElement: Element | null = null;\n\nconst runMicrotasks = catchError(() => {\n  while (_microtasks.a.length > 0) {\n    run(_microtasks);\n  }\n\n  _flags ^= SchedulerFlags.MicrotaskPending;\n  ++_clock;\n});\n\n// Task scheduler based on MessageChannel\nconst _taskChannel = new MessageChannel();\n_taskChannel.port1.onmessage = catchError((ev: MessageEvent) => {\n  _flags ^= SchedulerFlags.TaskPending;\n  run(_tasks);\n  ++_clock;\n});\n\nconst handleVisibilityChange = catchError(() => {\n  const newHidden = _isHidden();\n  if (((_flags & SchedulerFlags.Hidden) !== 0) !== newHidden) {\n    _flags ^= SchedulerFlags.Hidden | SchedulerFlags.VisibilityObserversCOW;\n\n    if (!newHidden && (_animations.length > 0)) {\n      requestNextFrame();\n    }\n\n    const observers = _visibilityObservers;\n    for (let i = 0; i < observers.length; ++i) {\n      observers[i](newHidden);\n    }\n    _flags ^= SchedulerFlags.VisibilityObserversCOW;\n  }\n});\n\nif (TARGET !== \"browser\" || typeof document[\"hidden\"] !== \"undefined\") {\n  _isHidden = () => document.hidden;\n  document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n} else if (typeof (document as any)[\"webkitHidden\"] !== \"undefined\") {\n  /**\n   * #quirks\n   *\n   * Android 4.4\n   */\n  _isHidden = () => (document as any)[\"webkitHidden\"];\n  document.addEventListener(\"webkitvisibilitychange\", handleVisibilityChange);\n} else {\n  _isHidden = () => false;\n}\nif (_isHidden()) {\n  _flags |= SchedulerFlags.Hidden;\n}\n\n/**\n * clock returns monotonically increasing clock value.\n *\n * @returns current clock value.\n */\nexport function clock(): number {\n  return _clock;\n}\n\n/**\n * scheduleMicrotask adds task to the microtask queue.\n *\n * @param task Microtask.\n */\nexport function scheduleMicrotask(task: () => void): void {\n  if (!(_flags & SchedulerFlags.MicrotaskPending)) {\n    _flags |= SchedulerFlags.MicrotaskPending;\n    Promise.resolve().then(runMicrotasks);\n  }\n  _microtasks.a.push(task);\n}\n\n/**\n * scheduleTask adds task to the task queue.\n *\n * @param task Task.\n */\nexport function scheduleTask(task: () => void): void {\n  if (!(_flags & SchedulerFlags.TaskPending)) {\n    _flags |= SchedulerFlags.TaskPending;\n    _taskChannel.port2.postMessage(0);\n  }\n  _tasks.a.push(task);\n}\n\nexport function isHidden(): boolean {\n  return (_flags & SchedulerFlags.Hidden) !== 0;\n}\n\nexport function addVisibilityObserver(observer: (visible: boolean) => void): void {\n  if (_flags & SchedulerFlags.VisibilityObserversCOW) {\n    _visibilityObservers = _visibilityObservers.slice();\n  }\n  _visibilityObservers.push(observer);\n}\n\nexport function removeVisibilityObserver(observer: (visible: boolean) => void): void {\n  if (_flags & SchedulerFlags.VisibilityObserversCOW) {\n    _visibilityObservers = _visibilityObservers.slice();\n  }\n  const index = _visibilityObservers.indexOf(observer);\n  if (index > -1) {\n    unorderedArrayDelete(_visibilityObservers, index);\n  }\n}\n\nexport function setUpdateDOMHandler(handler: () => void): void {\n  _updateDOMHandler = handler;\n}\n\n/**\n * addAnimation adds animation to the RepeatableTaskList.\n *\n * @param animation Animation task.\n */\nexport function addAnimation(animation: () => boolean | undefined): void {\n  _animations.push(animation);\n  requestNextFrame();\n}\n\n/**\n * addDOMReader adds DOM Reader to the RepeatableTaskList.\n *\n * DOM Reader will be be invoked on each frame in the read phase.\n *\n * @param reader Task that will be executed until it returns `false`.\n */\nexport function addDOMReader(reader: () => boolean | undefined): void {\n  _readers.push(reader);\n}\n\nexport function autofocus(node: Node): void {\n  if (node instanceof Element) {\n    _autofocusedElement = node;\n  }\n}\n\n/**\n * frameStartTime returns current frame start time.\n *\n * @returns current frame start time.\n */\nexport function currentFrameStartTime(): number {\n  return _currentFrameStartTime;\n}\n\nfunction _requestNextFrame(): void {\n  if (_flags & SchedulerFlags.NextFramePending) {\n    requestAnimationFrame(_handleNextFrame);\n  }\n}\n\n/**\n * requestNextFrame triggers next frame tasks execution.\n */\nexport function requestNextFrame(): void {\n  if (!(_flags & SchedulerFlags.NextFramePending)) {\n    _flags |= SchedulerFlags.NextFramePending;\n    scheduleMicrotask(_requestNextFrame);\n  }\n}\n\n/**\n * Frame tasks scheduler event handler.\n *\n * @param t Current time.\n */\nconst _handleNextFrame = catchError((time: number) => {\n  _flags ^= SchedulerFlags.NextFramePending | SchedulerFlags.CurrentFrameReady;\n  _currentFrameStartTime = time;\n\n  const frame = _nextFrame;\n  _nextFrame = _currentFrame;\n  _currentFrame = frame;\n\n  runRepeatableTasks(_readers);\n\n  // Perform read/write batching. Start with executing read DOM tasks, then update components, execute write DOM tasks\n  // and repeat until all read and write tasks are executed.\n  do {\n    while (frame.f & FrameTasksGroupFlags.Read) {\n      frame.f ^= FrameTasksGroupFlags.Read;\n      run(frame.r);\n    }\n\n    while (frame.f & (FrameTasksGroupFlags.Update | FrameTasksGroupFlags.Write)) {\n      if (frame.f & FrameTasksGroupFlags.Write) {\n        frame.f ^= FrameTasksGroupFlags.Write;\n        run(frame.w);\n      }\n\n      if (frame.f & FrameTasksGroupFlags.Update) {\n        frame.f ^= FrameTasksGroupFlags.Update;\n        _updateDOMHandler();\n      }\n    }\n  } while (frame.f & (\n    FrameTasksGroupFlags.Update |\n    FrameTasksGroupFlags.Write |\n    FrameTasksGroupFlags.Read\n  ));\n\n  _flags ^= SchedulerFlags.CurrentFrameReady;\n\n  if (!(_flags & SchedulerFlags.Hidden)) {\n    runRepeatableTasks(_animations);\n  }\n\n  // Perform tasks that should be executed when all DOM ops are finished.\n  while ((frame.f & FrameTasksGroupFlags.After)) {\n    frame.f ^= FrameTasksGroupFlags.After;\n    run(frame.a);\n  }\n\n  if (_autofocusedElement !== null) {\n    (_autofocusedElement as HTMLElement).focus();\n    _autofocusedElement = null;\n  }\n\n  if (_animations.length) {\n    requestNextFrame();\n  }\n\n  ++_clock;\n});\n\nfunction addFrameTaskUpdate(frame: FrameTasksGroup): void {\n  frame.f |= FrameTasksGroupFlags.Update;\n}\n\nfunction addFrameTaskWrite(frame: FrameTasksGroup, task: () => void): void {\n  frame.f |= FrameTasksGroupFlags.Write;\n  frame.w.a.push(task);\n}\n\nfunction addFrameTaskRead(frame: FrameTasksGroup, task: () => void): void {\n  frame.f |= FrameTasksGroupFlags.Read;\n  frame.r.a.push(task);\n}\n\nfunction addFrameTaskAfter(frame: FrameTasksGroup, task: () => void): void {\n  frame.f |= FrameTasksGroupFlags.After;\n  frame.a.a.push(task);\n}\n\nexport function nextFrameUpdate(): void {\n  requestNextFrame();\n  addFrameTaskUpdate(_nextFrame);\n}\n\nexport function nextFrameWrite(task: () => void): void {\n  requestNextFrame();\n  addFrameTaskWrite(_nextFrame, task);\n}\n\nexport function nextFrameRead(task: () => void): void {\n  requestNextFrame();\n  addFrameTaskRead(_nextFrame, task);\n}\n\nexport function nextFrameAfter(task: () => void): void {\n  requestNextFrame();\n  addFrameTaskAfter(_nextFrame, task);\n}\n\nexport function currentFrameUpdate(): void {\n  if (_flags & SchedulerFlags.CurrentFrameReady) {\n    addFrameTaskUpdate(_currentFrame);\n  } else {\n    nextFrameUpdate();\n  }\n}\n\nexport function currentFrameWrite(task: () => void): void {\n  if (_flags & SchedulerFlags.CurrentFrameReady) {\n    addFrameTaskWrite(_currentFrame, task);\n  } else {\n    nextFrameWrite(task);\n  }\n}\n\nexport function currentFrameRead(task: () => void): void {\n  if (_flags & SchedulerFlags.CurrentFrameReady) {\n    addFrameTaskRead(_currentFrame, task);\n  } else {\n    nextFrameRead(task);\n  }\n}\n\nexport function currentFrameAfter(task: () => void): void {\n  if (_flags & SchedulerFlags.CurrentFrameReady) {\n    addFrameTaskAfter(_currentFrame, task);\n  } else {\n    nextFrameAfter(task);\n  }\n}\n\n/**\n * triggerNextFrame triggers an update for the next frame.\n */\nexport function triggerNextFrame(): void {\n  if (_flags & SchedulerFlags.NextFramePending) {\n    _handleNextFrame(performance.now());\n  }\n}\n","const nodeProto = Node.prototype;\nconst elementProto = Element.prototype;\n\nexport const objectHasOwnProperty = Object.prototype.hasOwnProperty;\nexport const nodeInsertBefore = nodeProto.insertBefore;\nexport const nodeRemoveChild = nodeProto.removeChild;\nexport const nodeReplaceChild = nodeProto.replaceChild;\nexport const nodeCloneNode = nodeProto.cloneNode;\nexport const elementSetAttribute = elementProto.setAttribute;\nexport const elementSetAttributeNS = elementProto.setAttributeNS;\nexport const elementRemoveAttribute = elementProto.removeAttribute;\n","export const SVG_NAMESPACE = \"http://www.w3.org/2000/svg\";\nexport const XLINK_NAMESPACE = \"http://www.w3.org/1999/xlink\";\nexport const XML_NAMESPACE = \"http://www.w3.org/XML/1998/namespace\";\n\n/**\n * KeyboardEvent keyCode values.\n */\nexport const enum KeyCode {\n  WinKeyFFLinux = 0,\n  MacEnter = 3,\n  Backspace = 8,\n  Tab = 9,\n  Clear = 12,\n  Enter = 13,\n  Shift = 16,\n  Control = 17,\n  Alt = 18,\n  Pause = 19,\n  CapsLock = 20,\n  Escape = 27,\n  Space = 32,\n  PageUp = 33,\n  PageDown = 34,\n  End = 35,\n  Home = 36,\n  ArrowLeft = 37,\n  ArrowUp = 38,\n  ArrowRight = 39,\n  ArrowDown = 40,\n  NumNorthEast = 33,\n  NumSouthEast = 34,\n  NumSouthWest = 35,\n  NumNorthWest = 36,\n  NumWest = 37,\n  NumNorth = 38,\n  NumEast = 39,\n  NumSouth = 40,\n  PrintScreen = 44,\n  Insert = 45,\n  NumInsert = 45,\n  Delete = 46,\n  NumDelete = 46,\n  Zero = 48,\n  Ono = 49,\n  Two = 50,\n  Three = 51,\n  Four = 52,\n  Five = 53,\n  Six = 54,\n  Seven = 55,\n  Eight = 56,\n  Nine = 57,\n  FFSemicolon = 59,\n  FFEquals = 61,\n  /**\n   * US keyboard layouts only.\n   */\n  QuestionMark = 63,\n  A = 65,\n  B = 66,\n  C = 67,\n  D = 68,\n  E = 69,\n  F = 70,\n  G = 71,\n  H = 72,\n  I = 73,\n  J = 74,\n  K = 75,\n  L = 76,\n  M = 77,\n  N = 78,\n  O = 79,\n  P = 80,\n  Q = 81,\n  R = 82,\n  S = 83,\n  T = 84,\n  U = 85,\n  V = 86,\n  W = 87,\n  X = 88,\n  Y = 89,\n  Z = 90,\n  Meta = 91,\n  WinKeyLeft = 91,\n  WinKeyRight = 92,\n  ContextMenu = 93,\n  NumZero = 96,\n  NumOne = 97,\n  NumTwo = 98,\n  NumThree = 99,\n  NumFour = 100,\n  NumFive = 101,\n  NumSix = 102,\n  NumSeven = 103,\n  NumEight = 104,\n  NumNine = 105,\n  NumMultiply = 106,\n  NumPlus = 107,\n  NumMinus = 109,\n  NumPeriod = 110,\n  NumDivision = 111,\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F4 = 115,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n  NumLock = 144,\n  ScrollLock = 145,\n  /**\n   * First OS specific media key.\n   */\n  FirstMediaKey = 166,\n  /**\n   * Last OS specific media key.\n   */\n  LastMediaKey = 183,\n  /**\n   * US keyboard layouts only.\n   */\n  Semicolon = 186,\n  /**\n   * US keyboard layouts only.\n   */\n  Dash = 189,\n  /**\n   * US keyboard layouts only.\n   */\n  Equals = 187,\n  /**\n   * US keyboard layouts only.\n   */\n  Comma = 188,\n  /**\n   * US keyboard layouts only.\n   */\n  Period = 190,\n  /**\n   * US keyboard layouts only.\n   */\n  Slash = 191,\n  /**\n   * US keyboard layouts only.\n   */\n  Apostrophe = 192,\n  /**\n   * US keyboard layouts only.\n   */\n  Tilde = 192,\n  /**\n   * US keyboard layouts only.\n   */\n  SingleQuote = 222,\n  /**\n   * US keyboard layouts only.\n   */\n  OpenSquareBracket = 219,\n  /**\n   * US keyboard layouts only.\n   */\n  Backslash = 220,\n  /**\n   * US keyboard layouts only.\n   */\n  CloseSquareBracket = 221,\n  Win = 224,\n  MacFFMeta = 224,\n  WinIME = 229,\n}\n\n/**\n * KeyboardEvent keyLocation values.\n */\nexport const enum KeyLocation {\n  Standard = 0,\n  Left = 1,\n  Right = 2,\n  NumPad = 3,\n  Mobile = 4,\n  Joystick = 5,\n}\n\n/**\n * Flags for MouseEvent buttons property.\n *\n * https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons\n */\nexport const enum MouseButtons {\n  Left = 1,\n  Right = 1 << 1,\n  /**\n   * Wheel or middle button.\n   */\n  Middle = 1 << 2,\n  /**\n   * Typically the \"Browser Back\" button.\n   */\n  Fourh = 1 << 3,\n  /**\n   * Typically the \"Browser Forward\" button.\n   */\n  Fifth = 1 << 4,\n}\n\nexport type KeyName =\n  \"Accept\" |\n  \"Add\" |\n  \"Again\" |\n  \"AllCandidates\" |\n  \"Alphanumeric\" |\n  \"Alt\" |\n  \"AltGraph\" |\n  \"Apps\" |\n  \"Attn\" |\n  \"BrowserBack\" |\n  \"BrowserFavorites\" |\n  \"BrowserForward\" |\n  \"BrowserHome\" |\n  \"BrowserRefresh\" |\n  \"BrowserSearch\" |\n  \"BrowserStop\" |\n  \"Camera\" |\n  \"CapsLock\" |\n  \"Clear\" |\n  \"CodeInput\" |\n  \"Compose\" |\n  \"Control\" |\n  \"Crsel\" |\n  \"Convert\" |\n  \"Copy\" |\n  \"Cut\" |\n  \"Decimal\" |\n  \"Divide\" |\n  \"Down\" |\n  \"DownLeft\" |\n  \"DownRight\" |\n  \"Eject\" |\n  \"End\" |\n  \"Enter\" |\n  \"EraseEof\" |\n  \"Execute\" |\n  \"Exsel\" |\n  \"Fn\" |\n  \"F1\" |\n  \"F2\" |\n  \"F3\" |\n  \"F4\" |\n  \"F5\" |\n  \"F6\" |\n  \"F7\" |\n  \"F8\" |\n  \"F9\" |\n  \"F10\" |\n  \"F11\" |\n  \"F12\" |\n  \"F13\" |\n  \"F14\" |\n  \"F15\" |\n  \"F16\" |\n  \"F17\" |\n  \"F18\" |\n  \"F19\" |\n  \"F20\" |\n  \"F21\" |\n  \"F22\" |\n  \"F23\" |\n  \"F24\" |\n  \"FinalMode\" |\n  \"Find\" |\n  \"FullWidth\" |\n  \"HalfWidth\" |\n  \"HangulMode\" |\n  \"HanjaMode\" |\n  \"Help\" |\n  \"Hiragana\" |\n  \"Home\" |\n  \"Insert\" |\n  \"JapaneseHiragana\" |\n  \"JapaneseKatakana\" |\n  \"JapaneseRomaji\" |\n  \"JunjaMode\" |\n  \"KanaMode\" |\n  \"KanjiMode\" |\n  \"Katakana\" |\n  \"LaunchApplication1\" |\n  \"LaunchApplication2\" |\n  \"LaunchMail\" |\n  \"Left\" |\n  \"Menu\" |\n  \"Meta\" |\n  \"MediaNextTrack\" |\n  \"MediaPlayPause\" |\n  \"MediaPreviousTrack\" |\n  \"MediaStop\" |\n  \"ModeChange\" |\n  \"NextCandidate\" |\n  \"Nonconvert\" |\n  \"NumLock\" |\n  \"PageDown\" |\n  \"PageUp\" |\n  \"Paste\" |\n  \"Pause\" |\n  \"Play\" |\n  \"Power\" |\n  \"PreviousCandidate\" |\n  \"PrintScreen\" |\n  \"Process\" |\n  \"Props\" |\n  \"Right\" |\n  \"RomanCharacters\" |\n  \"Scroll\" |\n  \"Select\" |\n  \"SelectMedia\" |\n  \"Separator\" |\n  \"Shift\" |\n  \"Soft1\" |\n  \"Soft2\" |\n  \"Soft3\" |\n  \"Soft4\" |\n  \"Stop\" |\n  \"Subtract\" |\n  \"SymbolLock\" |\n  \"Up\" |\n  \"UpLeft\" |\n  \"UpRight\" |\n  \"Undo\" |\n  \"VolumeDown\" |\n  \"VolumeMute\" |\n  \"VolumeUp\" |\n  \"Win\" |\n  \"Zoom\" |\n  \"Backspace\" |\n  \"Tab\" |\n  \"Cancel\" |\n  \"Esc\" |\n  \"Spacebar\" |\n  \"Del\" |\n  \"DeadGrave\" |\n  \"DeadEacute\" |\n  \"DeadCircumflex\" |\n  \"DeadTilde\" |\n  \"DeadMacron\" |\n  \"DeadBreve\" |\n  \"DeadAboveDot\" |\n  \"DeadUmlaut\" |\n  \"DeadAboveRing\" |\n  \"DeadDoubleacute\" |\n  \"DeadCaron\" |\n  \"DeadCedilla\" |\n  \"DeadOgonek\" |\n  \"DeadIota\" |\n  \"DeadVoicedSound\" |\n  \"DeadSemivoicedSound\" |\n  \"Unidentified\";\n","import { EventHandlerFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\n\n/**\n * syncEvents syncs event handlers and invokes EventSource callbacks when event handler is attached or detached.\n *\n * @param a Old event handlers.\n * @param b New event handlers.\n */\nexport function syncEvents(\n  a: Array<EventHandler | null> | EventHandler | null,\n  b: Array<EventHandler | null> | EventHandler | null,\n): void {\n  let i: number;\n  let h1: EventHandler | null;\n  let h2: EventHandler | null;\n\n  if (a === null) {\n    attachEvents(b!);\n  } else if (b === null) {\n    detachEvents(a);\n  } else {\n    if (a instanceof Array) {\n      if (b instanceof Array) {\n        i = 0;\n        while (i < a.length && i < b.length) {\n          h1 = a[i];\n          h2 = b[i++];\n          if (h1 !== h2) {\n            if (h2 !== null) {\n              registerEventHandler(h2);\n            }\n            if (h1 !== null) {\n              unregisterEventHandler(h1);\n            }\n          }\n        }\n        while (i < b.length) {\n          h1 = b[i++];\n          if (h1 !== null) {\n            registerEventHandler(h1);\n          }\n        }\n        while (i < a.length) {\n          h1 = a[i++];\n          if (h1 !== null) {\n            unregisterEventHandler(h1);\n          }\n        }\n      } else {\n        registerEventHandler(b as EventHandler);\n\n        for (i = 0; i < a.length; ++i) {\n          h1 = a[i];\n          if (h1 !== null) {\n            unregisterEventHandler(h1);\n          }\n        }\n      }\n    } else {\n      attachEvents(b);\n      unregisterEventHandler(a as EventHandler);\n    }\n  }\n}\n\n/**\n * attachEvents attaches event handlers and invokes EventSource callbacks.\n *\n * @param events Event handlers.\n */\nexport function attachEvents(events: Array<EventHandler | null> | EventHandler): void {\n  if (events instanceof Array) {\n    for (let i = 0; i < events.length; ++i) {\n      const h = events[i];\n      if (h !== null) {\n        registerEventHandler(h);\n      }\n    }\n  } else {\n    registerEventHandler(events as EventHandler);\n  }\n}\n\n/**\n * detachEvents detaches events handles and invokes EventSource callbacks.\n *\n * @param events Event handlers.\n */\nexport function detachEvents(events: Array<EventHandler | null> | EventHandler): void {\n  if (events instanceof Array) {\n    for (let i = 0; i < events.length; ++i) {\n      const h = events[i];\n      if (h !== null) {\n        unregisterEventHandler(h);\n      }\n    }\n  } else {\n    unregisterEventHandler(events as EventHandler);\n  }\n}\n\n/**\n * registerEventHandler is a shortcut for Event Handler registration.\n *\n * @param handler Event Handler.\n */\nfunction registerEventHandler(handler: EventHandler<any>): void {\n  if (DEBUG) {\n    handler.flags |= EventHandlerFlags.Active;\n  }\n  handler.src.add(handler);\n}\n\n/**\n * unregisterEventHandler is a shortcut for Event Handler unregistration.\n *\n * @param handler Event Handler.\n */\nfunction unregisterEventHandler(handler: EventHandler<any>): void {\n  if (DEBUG) {\n    handler.flags &= ~EventHandlerFlags.Active;\n  }\n  handler.src.remove(handler);\n}\n","import { CSSStyleProps, NOOP } from \"ivi-core\";\nimport { checkDOMAttributesForTypos, checkDOMStylesForTypos, checkDeprecatedDOMSVGAttributes } from \"../dev_mode/typos\";\nimport { EventHandler } from \"../events/event_handler\";\nimport { VNodeFlags } from \"./flags\";\nimport { StatelessComponent, StatefulComponent, Component } from \"./component\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\n\n/**\n * Virtual DOM Node.\n *\n * @example\n *\n *     const vnode = div(\"div-class-name\")\n *       .a({ id: \"div-id\" })\n *       .e(Events.onClick((e) => console.log(\"click event\", e)))\n *       .c(\"Hello\");\n *\n * @final\n */\nexport class VNode<P = any, N = Node> {\n  /**\n   * Flags, see {@link VNodeFlags} for details.\n   */\n  _f: VNodeFlags;\n  /**\n   * Circular link to previous sibling node (left).\n   */\n  _l: VNode;\n  /**\n   * Next sibling node (right).\n   */\n  _r: VNode | null;\n  /**\n   * Children.\n   */\n  _c: VNode | string | number | boolean | null;\n  /**\n   * Tag property contains details about the type of the element.\n   */\n  _t:\n    | string\n    | VNode\n    | StatefulComponent<any>\n    | StatelessComponent<any>\n    | ConnectDescriptor<any, any, {}>\n    | null;\n  /**\n   * Children syncing algorithm is using key property to match nodes. Key should be unique among its siblings.\n   */\n  _k: any;\n  /**\n   * Properties.\n   */\n  _p: P | undefined;\n  /**\n   * Reference to HTML node or Component instance.\n   *\n   * It will be available after virtual node is created or synced. Each time VNode is synced, reference will be\n   * transferred from the old VNode to the new one.\n   */\n  _i: N | Component<any> | {} | null;\n  /**\n   * Class name.\n   */\n  _cs: string | undefined;\n  /**\n   * Style.\n   */\n  _s: CSSStyleProps | null;\n  /**\n   * Events.\n   */\n  _e: Array<EventHandler | null> | EventHandler | null;\n  /**\n   * Factory function that was used to instantiate this node.\n   *\n   * It is used for debugging and testing purposes.\n   */\n  factory!: Function;\n\n  constructor(\n    flags: number,\n    tag:\n      | string\n      | VNode\n      | StatelessComponent<P>\n      | StatefulComponent<P>\n      | ConnectDescriptor<any, any, {}>\n      | null,\n    props: P | undefined,\n    className: string | undefined,\n    children:\n      | VNode\n      | string\n      | number\n      | boolean\n      | null,\n  ) {\n    this._f = flags;\n    this._l = this;\n    this._r = null;\n    this._c = children;\n    this._t = tag;\n    this._k = 0;\n    this._p = props;\n    this._i = null;\n    this._cs = className;\n    this._s = null;\n    this._e = null;\n    if (DEBUG) {\n      this.factory = NOOP;\n    }\n  }\n\n  /**\n   * Assigns a key.\n   *\n   * Children reconciliation algorithm is using keys to match nodes. Key should be unique among its siblings.\n   *\n   * @param key - Unique key\n   * @returns this node\n   */\n  k(key: any): this {\n    this._f |= VNodeFlags.Key;\n    this._k = key;\n    return this;\n  }\n\n  /**\n   * Assigns style for an Element node.\n   *\n   * @param style - Style\n   * @returns this node\n   */\n  s<U extends CSSStyleProps>(style: U | null): this {\n    if (DEBUG) {\n      if (!(this._f & VNodeFlags.Element)) {\n        throw new Error(\"Failed to set style, style is available on element nodes only.\");\n      }\n\n      if (style !== null) {\n        checkDOMStylesForTypos(style);\n      }\n    }\n    this._s = style;\n    return this;\n  }\n\n  /**\n   * Assign events.\n   *\n   * @param events - Events\n   * @returns this node\n   */\n  e(events: Array<EventHandler | null> | EventHandler | null): this {\n    if (DEBUG) {\n      if ((this._f & VNodeFlags.Text)) {\n        throw new Error(\"Failed to set events, events aren't available on text nodes\");\n      }\n    }\n    this._f |= VNodeFlags.ElementPropsEvents;\n    this._e = events;\n    return this;\n  }\n\n  /**\n   * Assigns DOM attributes for an Element node.\n   *\n   * @param attrs - DOM attributes\n   * @returns this node\n   */\n  a(attrs: P | null): this {\n    if (DEBUG) {\n      if (!(this._f & VNodeFlags.Element)) {\n        throw new Error(\"Failed to set attrs, attrs are available on element nodes only.\");\n      }\n\n      if (attrs) {\n        checkDOMAttributesForTypos(attrs);\n\n        if (this._f & VNodeFlags.SvgElement) {\n          checkDeprecatedDOMSVGAttributes(this._t as string, attrs);\n        }\n      }\n    }\n    this._p = attrs as P;\n    return this;\n  }\n\n  /**\n   * Assigns children for an Element node.\n   *\n   * @param children - Children can be a simple string, single VNode or recursive list of VNodes with strings and null\n   *   values. It will automatically normalize recursive lists by flattening, filtering out null values and replacing\n   *   strings with text nodes.\n   * @returns this node\n   */\n  c(...children: Array<VNode | string | number | null>): this;\n  c(): this {\n    if (DEBUG) {\n      if (this._f & (VNodeFlags.ChildrenVNode | VNodeFlags.UnsafeHTML)) {\n        throw new Error(\"Failed to set children, VNode element is already having children.\");\n      }\n      if (!(this._f & VNodeFlags.Element)) {\n        throw new Error(\"Failed to set children, children are available on element nodes only.\");\n      }\n      if (this._f & VNodeFlags.InputElement) {\n        throw new Error(\"Failed to set children, input elements can't have children.\");\n      }\n      if (this._f & VNodeFlags.TextAreaElement) {\n        throw new Error(\"Failed to set children, textarea elements can't have children.\");\n      }\n      if (this._f & VNodeFlags.MediaElement) {\n        throw new Error(\"Failed to set children, media elements can't have children.\");\n      }\n      if (this._f & VNodeFlags.VoidElement) {\n        throw new Error(`Failed to set children, ${this._t} elements can't have children.`);\n      }\n    }\n\n    const children: Array<VNode | string | number | null> = arguments as any;\n    let first: VNode<any> | null = null;\n    let prev: VNode<any> | null = null;\n\n    for (let i = 0, p = 0; i < children.length; ++i, ++p) {\n      let n = children[i];\n\n      if (n !== null) {\n        if (typeof n !== \"object\") {\n          n = new VNode<null>(VNodeFlags.Text, null, null, void 0, n);\n        }\n        const last = n._l;\n        const flags = n._f;\n        if (last === n) {\n          if ((flags & VNodeFlags.Key) === 0) {\n            n._k = p;\n          }\n        } else if ((flags & VNodeFlags.KeyedList) === 0) {\n          let c: VNode | null = n;\n          do {\n            if ((c!._f & VNodeFlags.Key) === 0) {\n              c!._k = p;\n            }\n            ++p;\n            c = c!._r;\n          } while (c !== null);\n          --p;\n        }\n\n        if (prev !== null) {\n          n._l = prev;\n          prev._r = n;\n        } else {\n          first = n;\n        }\n        prev = last;\n      }\n    }\n    if (first !== null) {\n      first._l = prev!;\n      this._f |= VNodeFlags.ChildrenVNode;\n      this._c = first;\n      if (DEBUG) {\n        checkUniqueKeys(first);\n      }\n    }\n\n    return this;\n  }\n\n  /**\n   * Assigns children as an innerHTML string. It is potentially vulnerable to XSS attacks.\n   *\n   * @param html innerHTML in a string format\n   * @returns this node\n   */\n  unsafeHTML(html: string | null): this {\n    if (DEBUG) {\n      if (this._f & VNodeFlags.ChildrenVNode) {\n        throw new Error(\"Failed to set unsafeHTML, VNode element is already having children.\");\n      }\n      if (!(this._f & VNodeFlags.Element)) {\n        throw new Error(\"Failed to set unsafeHTML, unsafeHTML is available on element nodes only.\");\n      }\n      if (this._f & VNodeFlags.InputElement) {\n        throw new Error(\"Failed to set unsafeHTML, input elements can't have innerHTML.\");\n      }\n      if (this._f & VNodeFlags.TextAreaElement) {\n        throw new Error(\"Failed to set unsafeHTML, textarea elements can't have innerHTML.\");\n      }\n      if (this._f & VNodeFlags.MediaElement) {\n        throw new Error(\"Failed to set unsafeHTML, media elements can't have children.\");\n      }\n      if (this._f & VNodeFlags.VoidElement) {\n        throw new Error(`Failed to set unsafeHTML, ${this._t} elements can't have children.`);\n      }\n    }\n    this._f |= VNodeFlags.UnsafeHTML;\n    this._c = html;\n    return this;\n  }\n\n  /**\n   * Assigns value for an HTMLInputElement and HTMLTextAreaElement elements.\n   *\n   * @param value - Input value\n   * @returns this node\n   */\n  value(value: string | boolean | null): this {\n    if (DEBUG) {\n      if (!(this._f & (VNodeFlags.InputElement | VNodeFlags.TextAreaElement))) {\n        throw new Error(\"Failed to set value, value is available on input and textarea elements only.\");\n      }\n    }\n    this._c = value;\n    return this;\n  }\n}\n\n/**\n * getDOMInstanceFromVNode retrieves a reference to a DOM node from a VNode object.\n *\n * @param node VNode which contains reference to a DOM node.\n * @returns null if VNode doesn't have a reference to a DOM node.\n */\nexport function getDOMInstanceFromVNode<T extends Node>(node: VNode<any, T>): T | null {\n  if ((node._f & (\n    VNodeFlags.StatelessComponent |\n    VNodeFlags.StatefulComponent |\n    VNodeFlags.Connect |\n    VNodeFlags.UpdateContext\n  )) !== 0) {\n    return getDOMInstanceFromVNode<T>(node._c as VNode<any, T>);\n  }\n  return node._i as T;\n}\n\n/**\n * getComponentInstanceFromVNode retrieves a reference to a Component instance from a VNode object.\n *\n * @param vnode - Virtual DOM node which contains reference to a Component instance\n * @returns `null` if `vnode` doesn't have a reference to a Component instance\n */\nexport function getComponentInstanceFromVNode<T extends Component<any>>(vnode: VNode): T | null {\n  if (DEBUG) {\n    if ((vnode._f & (\n      VNodeFlags.StatelessComponent |\n      VNodeFlags.StatefulComponent |\n      VNodeFlags.Connect |\n      VNodeFlags.UpdateContext\n    )) === 0) {\n      throw new Error(\"Failed to get component instance: VNode should represent a Component.\");\n    }\n  }\n  return vnode._i as T | null;\n}\n\n/**\n * autofocus makes an element focused after instantiation.\n *\n * @param vnode - Virtual DOM node\n * @return `vnode`\n */\nexport function autofocus<N extends VNode>(vnode: N): N {\n  if (DEBUG) {\n    if (!(vnode._f & (\n      VNodeFlags.Element |\n      VNodeFlags.StatelessComponent |\n      VNodeFlags.StatefulComponent |\n      VNodeFlags.Connect |\n      VNodeFlags.UpdateContext\n    ))) {\n      throw new Error(\"Failed to set autofocus, autofocus is available on element and component nodes only.\");\n    }\n  }\n  vnode._f |= VNodeFlags.Autofocus;\n  return vnode;\n}\n\n/**\n * stopDirtyChecking stops dirty checking process when it goes through this virtual DOM node.\n *\n * @param vnode - Virtual DOM node\n * @returns `vnode`\n */\nexport function stopDirtyChecking<N extends VNode>(vnode: N): N {\n  vnode._f |= VNodeFlags.StopDirtyChecking;\n  return vnode;\n}\n\n/**\n * checkUniqueKeys checks that all nodes have unique keys.\n *\n * @param children - Children nodes\n */\nfunction checkUniqueKeys(children: VNode): void {\n  let keys: Set<any> | undefined;\n  let node: VNode<any> | null = children;\n  while (node !== null) {\n    if (node._f & VNodeFlags.Key) {\n      if (keys === undefined) {\n        keys = new Set<any>();\n      } else if (keys.has(node._k)) {\n        throw new Error(`Failed to set children, invalid children list, key: \"${node._k}\" is used multiple times.`);\n      }\n      keys.add(node._k);\n    }\n    node = node._r;\n  }\n}\n","import {\n  XML_NAMESPACE, XLINK_NAMESPACE, CSSStyleProps, elementRemoveAttribute, elementSetAttribute, elementSetAttributeNS,\n} from \"ivi-core\";\n\n/**\n * Sync DOM styles.\n *\n * @param node - HTML or SVG Element\n * @param a - Prev styles\n * @param b - Next styles\n */\nexport function syncStyle(\n  node: HTMLElement | SVGElement,\n  a: CSSStyleProps | null,\n  b: CSSStyleProps | null,\n): void {\n  const style = node.style;\n  let key: string;\n  let bValue;\n\n  if (a === null) {\n    // a is empty, insert all styles from b.\n    for (key in b!) {\n      bValue = (b as { [key: string]: string })[key];\n      if (bValue !== undefined) {\n        style.setProperty(key, bValue);\n      }\n    }\n  } else if (b !== null) {\n    for (key in b) {\n      bValue = (b as { [key: string]: string })[key];\n      if ((a as { [key: string]: string })[key] !== bValue) {\n        if (bValue !== undefined) {\n          style.setProperty(key, bValue);\n        } else {\n          style.removeProperty(key);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Set DOM attribute.\n *\n * @param node - HTML or SVG Element\n * @param svg - SVG Element\n * @param key - Attribute name\n * @param value - Attribute value\n */\nfunction setDOMAttribute(node: Element, svg: boolean, key: string, value: any): void {\n  if (typeof value === \"boolean\") {\n    if (value) {\n      value = \"\";\n    } else {\n      return;\n    }\n  }\n  if (svg === true) {\n    if (key.length > 5) {\n      if (key.charCodeAt(0) === 120 &&\n        // 58 === \":\"\n        (\n          key.charCodeAt(3) === 58 || // \"xml:\"\n          key.charCodeAt(5) === 58    // \"xlink:\"\n        )\n      ) {\n        if (key.startsWith(\"xml:\")) {\n          /**\n           * All attributes that starts with an \"xml:\" prefix will be assigned with XML namespace.\n           */\n          /* istanbul ignore else */\n          if (DEBUG) {\n            node.setAttributeNS(XML_NAMESPACE, key, value);\n          } else {\n            elementSetAttributeNS.call(node, XML_NAMESPACE, key, value);\n          }\n          return;\n        } else if (key.startsWith(\"xlink:\")) {\n          /**\n           * All attributes that starts with an \"xlink:\" prefix will be assigned with XLINK namespace.\n           */\n          /* istanbul ignore else */\n          if (DEBUG) {\n            node.setAttributeNS(XLINK_NAMESPACE, key, value);\n          } else {\n            elementSetAttributeNS.call(node, XLINK_NAMESPACE, key, value);\n          }\n          return;\n        }\n      }\n    }\n  }\n  /* istanbul ignore else */\n  if (DEBUG) {\n    node.setAttribute(key, value);\n  } else {\n    elementSetAttribute.call(node, key, value);\n  }\n}\n\n/**\n * Sync DOM attributes.\n *\n * @param node - HTML or SVG Element\n * @param svg - SVG Element\n * @param a - Prev DOM properties\n * @param b - Next DOM properties\n */\nexport function syncDOMAttrs(\n  node: Element,\n  svg: boolean,\n  a: { [key: string]: any } | null,\n  b: { [key: string]: any } | null,\n): void {\n  let key: string;\n  let bValue;\n\n  if (a === null) {\n    // a is empty, insert all attributes from b.\n    for (key in b!) {\n      bValue = b![key];\n      if (bValue !== undefined) {\n        setDOMAttribute(node, svg, key, bValue);\n      }\n    }\n  } else if (b !== null) {\n    for (key in b) {\n      bValue = b[key];\n      if (a[key] !== bValue) {\n        if (bValue !== undefined) {\n          setDOMAttribute(node, svg, key, bValue);\n        } else {\n          /* istanbul ignore else */\n          if (DEBUG) {\n            node.removeAttribute(key);\n          } else {\n            elementRemoveAttribute.call(node, key);\n          }\n        }\n      }\n    }\n  }\n}\n","/**\n * DO NOT MOVE THIS FUNCTIONS TO SEPARATE MODULES!\n *\n * There are so many circular dependencies between functions in this module, so just leave it all here instead of\n * creating many circular dependencies between JS modules.\n */\n\nimport {\n  SVG_NAMESPACE, nodeRemoveChild, nodeInsertBefore, elementSetAttribute, nodeCloneNode, nodeReplaceChild,\n} from \"ivi-core\";\nimport { autofocus } from \"ivi-scheduler\";\nimport { syncEvents, attachEvents, detachEvents } from \"../events/sync_events\";\nimport { VNodeFlags, ComponentFlags } from \"./flags\";\nimport { VNode, getDOMInstanceFromVNode } from \"./vnode\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\nimport { StatefulComponent, StatelessComponent, Component } from \"./component\";\nimport { syncDOMAttrs, syncStyle } from \"./sync_dom\";\n\n/**\n * Removes VNode.\n *\n * @param parent - Parent DOM node\n * @param vnode - Virtual DOM node to remove\n */\nexport function removeVNode(parent: Node, vnode: VNode): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    parent.removeChild(getDOMInstanceFromVNode(vnode)!);\n  } else {\n    nodeRemoveChild.call(parent, getDOMInstanceFromVNode(vnode)!);\n  }\n  _detach(vnode);\n}\n\n/**\n * Recursively attach all nodes.\n *\n * @param vnode - Virtual DOM node\n */\nfunction _attach(vnode: VNode): void {\n  const flags = vnode._f;\n\n  if ((flags & VNodeFlags.ChildrenVNode) !== 0) {\n    let child: VNode | null = vnode._c as VNode;\n    do {\n      _attach(child!);\n      child = child._r;\n    } while (child !== null);\n  } else if (\n    (flags & (\n      VNodeFlags.StatelessComponent |\n      VNodeFlags.StatefulComponent |\n      VNodeFlags.Connect |\n      VNodeFlags.UpdateContext\n    )) !== 0) {\n    if ((flags & VNodeFlags.StatefulComponent) !== 0) {\n      (vnode._i as Component<any>).attached();\n    }\n    _attach(vnode._c as VNode);\n  }\n\n  if ((flags & VNodeFlags.ElementPropsEvents) !== 0) {\n    if (vnode._e !== null) {\n      attachEvents(vnode._e);\n    }\n  }\n}\n\n/**\n * Recursively detach all nodes.\n *\n * @param vnode - Virtual DOM node\n */\nfunction _detach(vnode: VNode): void {\n  const flags = vnode._f;\n\n  if ((flags & VNodeFlags.ChildrenVNode) !== 0) {\n    let child: VNode | null = vnode._c as VNode;\n    do {\n      _detach(child!);\n      child = child._r;\n    } while (child !== null);\n  } else if ((flags & (\n    VNodeFlags.StatelessComponent |\n    VNodeFlags.StatefulComponent |\n    VNodeFlags.Connect |\n    VNodeFlags.UpdateContext\n  )) !== 0) {\n    _detach(vnode._c as VNode);\n    if ((flags & VNodeFlags.StatefulComponent) !== 0) {\n      const component = vnode._i as Component<any>;\n      component.flags |= ComponentFlags.Detached;\n      component.detached();\n    }\n  }\n\n  if ((flags & VNodeFlags.ElementPropsEvents) !== 0) {\n    if (vnode._e !== null) {\n      detachEvents(vnode._e);\n    }\n  }\n}\n\n/**\n * Recursively perform dirty checking.\n *\n * @param parent - Parent DOM Node\n * @param vnode - VNode\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nexport function dirtyCheck(parent: Node, vnode: VNode, context: {}, dirtyContext: boolean): number {\n  const flags = vnode._f;\n  let deepUpdate = 0;\n  let children: VNode | null | undefined;\n  let instance: Node | Component<any> | {} | undefined;\n\n  if ((flags & (\n    VNodeFlags.StopDirtyChecking | // StopDirtyChecking will convert this value to -value\n    VNodeFlags.ChildrenVNode |\n    VNodeFlags.StatelessComponent |\n    VNodeFlags.StatefulComponent |\n    VNodeFlags.Connect |\n    VNodeFlags.UpdateContext\n  )) > 0) {\n    children = vnode._c as VNode;\n    if ((flags & VNodeFlags.ChildrenVNode) !== 0) {\n      instance = vnode._i as Node;\n      do {\n        deepUpdate |= dirtyCheck(instance as Node, children, context, dirtyContext);\n        children = children._r;\n      } while (children !== null);\n    } else if ((flags & VNodeFlags.StatefulComponent) !== 0) {\n      instance = vnode._i as Component<any>;\n      if (((instance as Component<any>).flags & ComponentFlags.Dirty) !== 0) {\n        syncVNode(\n          parent,\n          children,\n          vnode._c = DEBUG ?\n            shouldBeSingleVNode((instance as Component<any>).render()) :\n            /* istanbul ignore next */(instance as Component<any>).render(),\n          context,\n          dirtyContext,\n        );\n        (instance as Component<any>).flags &= ~ComponentFlags.Dirty;\n        (instance as Component<any>).updated(true);\n        deepUpdate = 1;\n      } else {\n        deepUpdate = dirtyCheck(parent, children, context, dirtyContext);\n        if (deepUpdate !== 0) {\n          (instance as Component<any>).updated(false);\n        }\n      }\n    } else { // (flags & (VNodeFlags.StatelessComponent | VNodeFlags.Connect | VNodeFlags.UpdateContext))\n      if ((flags & VNodeFlags.Connect) !== 0) {\n        const connect = vnode._t as ConnectDescriptor<any, any, {}>;\n        instance = vnode._i as {};\n        const selectData = connect.select(instance, vnode._p, context);\n        if (instance === selectData) {\n          deepUpdate = dirtyCheck(parent, children, context, dirtyContext);\n        } else {\n          deepUpdate = 1;\n          vnode._i = selectData;\n          syncVNode(\n            parent,\n            children,\n            vnode._c = DEBUG ?\n              shouldBeSingleVNode(connect.render(selectData)) :\n              /* istanbul ignore next */connect.render(selectData),\n            context,\n            dirtyContext,\n          );\n        }\n      } else {\n        if ((flags & VNodeFlags.UpdateContext) !== 0) {\n          if (dirtyContext === true) {\n            vnode._i = { ...context, ...vnode._p };\n          }\n          context = vnode._i as {};\n        }\n        deepUpdate = dirtyCheck(parent, children, context, dirtyContext);\n      }\n    }\n  }\n  return deepUpdate;\n}\n\n/**\n * Remove all children.\n *\n * `detach()` lifecycle methods will be invoked for all children and their subtrees.\n *\n * @param parent - Parent DOM element\n * @param firstVNode - First Virtual DOM node\n */\nfunction _removeAllChildren(parent: Node, firstVNode: VNode): void {\n  parent.textContent = \"\";\n  let vnode: VNode | null = firstVNode;\n  do {\n    _detach(vnode);\n    vnode = vnode._r;\n  } while (vnode !== null);\n}\n\n/**\n * Set value for `HTMLInputElement`.\n *\n * When value has a string type it is assigned to `value` property, otherwise it is assigned to `checked` property.\n *\n * @param input - HTMLInputElement\n * @param value - Value\n */\nfunction _setInputValue(input: HTMLInputElement, value: string | boolean): void {\n  if (typeof value === \"string\") {\n    input.value = value;\n  } else {\n    input.checked = value;\n  }\n}\n\n/**\n * Render virtual DOM node.\n *\n * @param parent - Parent DOM element\n * @param vnode - Virtual DOM node to render\n * @param context - Current context\n * @returns Rendered DOM Node\n */\nfunction _render(parent: Node, vnode: VNode, context: {}): Node {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (vnode._i !== null) {\n      throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times, \" +\n        \"clone VNode with `cloneVNode`.\");\n    }\n  }\n\n  const flags = vnode._f;\n  let instance: Node | Component<any> | null = null;\n  let node: Node;\n\n  if ((flags & VNodeFlags.Text) !== 0) {\n    instance = node = document.createTextNode(vnode._c as string);\n  } else {\n    const tag = vnode._t;\n    if ((flags & (VNodeFlags.Element | VNodeFlags.StatefulComponent)) !== 0) {\n      if ((flags & VNodeFlags.Element) !== 0) {\n        const svg = (flags & VNodeFlags.SvgElement) !== 0;\n        if ((flags & VNodeFlags.ElementFactory) === 0) {\n          node = svg ?\n            document.createElementNS(SVG_NAMESPACE, tag as string) :\n            document.createElement(tag as string);\n        } else {\n          if ((tag as VNode)._i === null) {\n            _render(parent, (tag as VNode), context);\n          }\n          /* istanbul ignore else */\n          if (DEBUG) {\n            node = ((tag as VNode)._i as Node).cloneNode(false);\n          } else {\n            node = nodeCloneNode.call((tag as VNode)._i as Node, false);\n          }\n        }\n\n        if (vnode._cs !== void 0) {\n          /**\n           * SVGElement.className returns `SVGAnimatedString`\n           */\n          if (svg === true) {\n            /* istanbul ignore else */\n            if (DEBUG) {\n              (node as Element).setAttribute(\"class\", vnode._cs);\n            } else {\n              elementSetAttribute.call(node as Element, \"class\", vnode._cs);\n            }\n          } else {\n            (node as Element).className = vnode._cs;\n          }\n        }\n\n        if (vnode._p !== null) {\n          syncDOMAttrs(node as Element, svg, null, vnode._p);\n        }\n        if (vnode._s !== null) {\n          syncStyle(node as HTMLElement, null, vnode._s);\n        }\n\n        let children = vnode._c;\n        if (children !== null) {\n          if ((flags & VNodeFlags.ChildrenVNode) !== 0) {\n            children = children as VNode;\n            do {\n              /* istanbul ignore else */\n              if (DEBUG) {\n                node.insertBefore(_render(node, children, context), null);\n              } else {\n                nodeInsertBefore.call(node, _render(node, children, context), null);\n              }\n              children = children._r;\n            } while (children !== null);\n          } else if ((flags & (VNodeFlags.InputElement | VNodeFlags.TextAreaElement)) !== 0) {\n            /**\n             * #quirks\n             *\n             * It is important that input value is assigned after all properties. It prevents some issues with\n             * rounding, etc. `value` should be assigned after `step`, `min` and `max` properties.\n             */\n            _setInputValue(node as HTMLInputElement, children as string | boolean);\n          } else { // (flags & VNodeFlags.UnsafeHTML)\n            (node as Element).innerHTML = children as string;\n          }\n        }\n\n        instance = node;\n      } else { // ((flags & VNodeFlags.StatefulComponent) !== 0)\n        const component = instance = new (tag as StatefulComponent<any>)(vnode._p);\n        const root = vnode._c = DEBUG ?\n          shouldBeSingleVNode(component.render()) :\n          /* istanbul ignore next */component.render();\n        node = _render(parent, root, context);\n      }\n    } else { // ((flags & (VNodeFlags.StatelessComponent | VNodeFlags.UpdateContext | VNodeFlags.Connect)) !== 0)\n      if ((flags & (VNodeFlags.UpdateContext | VNodeFlags.Connect)) !== 0) {\n        if ((flags & VNodeFlags.Connect) !== 0) {\n          const connect = (tag as ConnectDescriptor<any, any, {}>);\n          const selectData = instance = connect.select(null, vnode._p, context);\n          vnode._c = DEBUG ?\n            shouldBeSingleVNode(connect.render(selectData)) :\n            /* istanbul ignore next */connect.render(selectData);\n        } else {\n          context = instance = { ...context, ...vnode._p };\n        }\n      } else {\n        vnode._c = DEBUG ?\n          shouldBeSingleVNode((tag as StatelessComponent<any>).render(vnode._p)) :\n          /* istanbul ignore next */(tag as StatelessComponent<any>).render(vnode._p);\n      }\n      node = _render(parent, vnode._c as VNode, context);\n    }\n\n    if ((flags & VNodeFlags.Autofocus) !== 0) {\n      autofocus(node as Element);\n    }\n  }\n\n  vnode._i = instance;\n\n  return node;\n}\n\n/**\n * Render virtual DOM node into container and invoke `attached()` lifecycle methods after node is inserted into\n * container.\n *\n * It is important that `attached()` methods are invoked only after DOM nodes have been inserted into container, so it\n * goes twice through the entire vnode tree, first time when everything is rendered and the second time when\n * `attached()` methods are invoked.\n *\n * @param parent - Parent DOM element\n * @param refChild - Reference to the next DOM node, when it is `null` child will be inserted at the end\n * @param vnode - Virtual DOM node\n * @param context - Current context\n * @returns Rendered DOM Node\n */\nexport function renderVNode(\n  parent: Node,\n  refChild: Node | null,\n  vnode: VNode,\n  context: {},\n): Node {\n  const node = _render(parent, vnode, context);\n  /* istanbul ignore else */\n  if (DEBUG) {\n    parent.insertBefore(node, refChild);\n  } else {\n    nodeInsertBefore.call(parent, node, refChild);\n  }\n  _attach(vnode);\n  return node;\n}\n\n/**\n * Sync virtual DOM nodes.\n *\n * When node `a` is synced with node `b`, `a` node should be considered as destroyed, and any access to it after sync\n * is an undefined behavior.\n *\n * @param parent - Parent DOM element\n * @param a - Previous virtual DOM node\n * @param b - Next virtual DOM node\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nexport function syncVNode(\n  parent: Node,\n  a: VNode,\n  b: VNode,\n  context: {},\n  dirtyContext: boolean,\n): void {\n  if (a === b) {\n    dirtyCheck(parent, b, context, dirtyContext);\n    return;\n  }\n\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (b._i !== null) {\n      throw new Error(\"VNode is already have a reference to an instance. VNodes can't be used mutliple times\");\n    }\n  }\n\n  let instance;\n  const aFlags = a._f;\n  const bFlags = b._f;\n  if (\n    (((aFlags ^ bFlags) & VNodeFlags.Syncable) === 0) &&\n    (\n      (aFlags & (\n        VNodeFlags.ElementFactory |\n        VNodeFlags.StatelessComponent |\n        VNodeFlags.StatefulComponent |\n        VNodeFlags.Connect\n      )) === 0 ||\n      a._t === b._t\n    ) &&\n    a._k === b._k\n  ) {\n    b._i = instance = a._i;\n    const aChild = a._c;\n    let bChild = b._c;\n\n    if ((bFlags & VNodeFlags.Text) !== 0) {\n      if (aChild !== bChild) {\n        (instance as Text).data = bChild as string;\n      }\n    } else {\n      if (a._e !== b._e) {\n        syncEvents(a._e, b._e);\n      }\n\n      if ((bFlags & (VNodeFlags.Element | VNodeFlags.StatefulComponent)) !== 0) {\n        if ((bFlags & VNodeFlags.Element) !== 0) {\n          const svg = (bFlags & VNodeFlags.SvgElement) !== 0;\n\n          if (a._cs !== b._cs) {\n            const className = b._cs === void 0 ? \"\" : b._cs;\n            if (svg === true) {\n              /* istanbul ignore else */\n              if (DEBUG) {\n                (instance as Element).setAttribute(\"class\", className);\n              } else {\n                elementSetAttribute.call(instance, \"class\", className);\n              }\n            } else {\n              (instance as Element).className = className;\n            }\n          }\n\n          if (a._p !== b._p) {\n            syncDOMAttrs(instance as Element, svg, a._p, b._p);\n          }\n          if (a._s !== b._s) {\n            syncStyle(instance as HTMLElement, a._s, b._s);\n          }\n\n          if (aChild !== bChild) {\n            if (aChild === null) {\n              if ((bFlags & VNodeFlags.ChildrenVNode) !== 0) {\n                bChild = bChild as VNode;\n                do {\n                  renderVNode(instance as Element, null, bChild, context);\n                  bChild = bChild._r!;\n                } while (bChild !== null);\n              } else if ((bFlags & (VNodeFlags.InputElement | VNodeFlags.TextAreaElement)) !== 0) {\n                _setInputValue(instance as HTMLInputElement, bChild as string | boolean);\n              } else { // (bParentFlags & VNodeFlags.UnsafeHTML)\n                (instance as Element).innerHTML = bChild as string;\n              }\n            } else if (bChild === null) {\n              if ((aFlags & VNodeFlags.ChildrenVNode) !== 0) {\n                _removeAllChildren(instance as Element, aChild as VNode);\n              } else if ((aFlags & VNodeFlags.UnsafeHTML) !== 0) {\n                (instance as Element).textContent = \"\";\n              } else { // (bParentFlags & VNodeFlags.InputElement)\n                /**\n                 * When value/checked isn't specified, we should just ignore it.\n                 */\n              }\n            } else {\n              if ((aFlags & VNodeFlags.ChildrenVNode) !== 0) {\n                _syncChildrenTrackByKeys(instance as Element, aChild as VNode, bChild as VNode, context, dirtyContext);\n              } else if ((aFlags & VNodeFlags.UnsafeHTML) !== 0) {\n                (instance as Element).innerHTML = bChild as string;\n              } else { // (aParentFlags & VNodeFlags.InputElement)\n                /**\n                 * Input elements has an internal state with a `value` property, so it should be checked before an\n                 * assignment to prevent unnecessary events when `value` is the same as the `value` in the internal\n                 * state.\n                 *\n                 * In general we don't want to override behaviour of DOM Elements with an internal state. Assigning\n                 * props to such elements should be treated as a one-time assignment, so it works almost like `value`\n                 * attribute, except when a new value is passed down, it can override previous value when it doesn't\n                 * match the previous one. There is absolutely no reasons to overcomplicate such behaviour just to make\n                 * it more beatiful like it is a declarative assignment and can't be changed, because in real\n                 * applications, component that controls this element will always track changes, and when it changes it\n                 * will invalidate its representation, so everything will stay in-sync.\n                 */\n                if (typeof bChild === \"string\") {\n                  if ((instance as HTMLInputElement).value !== bChild) {\n                    (instance as HTMLInputElement).value = bChild;\n                  }\n                } else {\n                  (instance as HTMLInputElement).checked = bChild as boolean;\n                }\n              }\n            }\n          }\n        } else { // VNodeFlags.StatefulComponent\n          // Update component props\n          const oldProps = a._p;\n          const newProps = b._p;\n          if (oldProps !== newProps) {\n            // There is no reason to call `newPropsReceived` when props aren't changed, even when they are\n            // reassigned later to reduce memory usage.\n            (instance as Component<any>).newPropsReceived(oldProps, newProps);\n          }\n          // Reassign props even when they aren't changed to reduce overall memory usage.\n          //\n          // New value always stays alive because it is referenced from virtual dom tree, so instead of keeping\n          // in memory two values even when they are the same, we just always reassign it to the new value.\n          (instance as Component<any>).props = newProps;\n\n          if (\n            (((instance as Component<any>).flags & ComponentFlags.Dirty) !== 0) ||\n            ((instance as Component<any>).shouldUpdate(oldProps, newProps) === true)\n          ) {\n            syncVNode(\n              parent,\n              aChild as VNode,\n              b._c = DEBUG ?\n                shouldBeSingleVNode((instance as Component<any>).render()) :\n                /* istanbul ignore next */(instance as Component<any>).render(),\n              context,\n              dirtyContext,\n            );\n            (instance as Component<any>).flags &= ~ComponentFlags.Dirty;\n            (instance as Component<any>).updated(true);\n          } else {\n            if (dirtyCheck(parent, b._c = aChild as VNode, context, dirtyContext) !== 0) {\n              (instance as Component<any>).updated(false);\n            }\n          }\n        }\n      } else { // (VNodeFlags.StatelessComponent | VNodeFlags.UpdateContext | VNodeFlags.Connect)\n        if ((bFlags & (VNodeFlags.UpdateContext | VNodeFlags.Connect)) !== 0) {\n          if ((bFlags & VNodeFlags.Connect) !== 0) {\n            const connect = b._t as ConnectDescriptor<any, any, {}>;\n            const prevSelectData = instance;\n            const selectData = b._i = connect.select(prevSelectData, b._p, context);\n            if (prevSelectData === selectData) {\n              dirtyCheck(parent, b._c = aChild as VNode, context, dirtyContext);\n            } else {\n              syncVNode(\n                parent,\n                aChild as VNode,\n                b._c = DEBUG ?\n                  shouldBeSingleVNode(connect.render(selectData)) :\n                    /* istanbul ignore next */connect.render(selectData),\n                context,\n                dirtyContext,\n              );\n            }\n          } else {\n            if (a._p !== b._p) {\n              dirtyContext = true;\n            }\n            b._i = context = (dirtyContext === true) ?\n              { ...context, ...b._p } :\n              instance as {};\n            syncVNode(parent, aChild as VNode, bChild as VNode, context, dirtyContext);\n          }\n        } else { // VNodeFlags.StatelessComponent\n          const sc = b._t as StatelessComponent<any>;\n          if (\n            (a._p !== b._p) &&\n            ((bFlags & VNodeFlags.ShouldUpdateHint) === 0 || sc.shouldUpdate!(a._p, b._p) === true)\n          ) {\n            syncVNode(\n              parent,\n              aChild as VNode,\n              b._c = DEBUG ?\n                shouldBeSingleVNode(sc.render(b._p)) :\n                  /* istanbul ignore next */sc.render(b._p),\n              context,\n              dirtyContext,\n            );\n          } else {\n            dirtyCheck(parent, b._c = aChild as VNode, context, dirtyContext);\n          }\n        }\n      }\n    }\n  } else {\n    instance = _render(parent, b, context);\n    /* istanbul ignore else */\n    if (DEBUG) {\n      parent.replaceChild(instance, getDOMInstanceFromVNode(a)!);\n    } else {\n      nodeReplaceChild.call(parent, instance, getDOMInstanceFromVNode(a)!);\n    }\n    _detach(a);\n    _attach(b);\n  }\n}\n\n/**\n * Sync children.\n *\n * High-level overview of the algorithm that is implemented in this function (this overview doesn't include some details\n * how it handles nodes with implicit keys and many small tricks to reduce memory allocations and unnecessary work).\n *\n * This algorithm finds a minimum[1] number of DOM operations. It works in several steps:\n *\n * 1. Find common suffix and prefix.\n *\n * This optimization technique is searching for nodes with identical keys by simultaneously iterating over nodes in the\n * old children list `A` and new children list `B` from both sides:\n *\n *  A: -> [a b c d] <-\n *  B: -> [a b d] <-\n *\n * Here we can skip nodes \"a\" and \"b\" at the begininng, and node \"d\" at the end.\n *\n *  A: -> [c] <-\n *  B: -> [] <-\n *\n * Here it will check if the size of one of the list is equal to zero. When length of the old children list is zero,\n * it will insert all remaining nodes from the new list, and when length of the new children list is zero, it will\n * remove all remaining nodes from the old list.\n *\n * When algorithm can't find a solution with this simple optimization technique, it will go to the next step of the\n * algorithm. For example:\n *\n *  A: -> [a b c d e f g] <-\n *  B: -> [a c b h f e g] <-\n *\n * Nodes \"a\" and \"g\" at the edges are the same, skipping them.\n *\n *  A: -> [b c d e f] <-\n *  B: -> [c b h f e] <-\n *\n * Here we are stuck, so we need to switch to the next step.\n *\n * 2. Look for removed and inserted nodes, and simultaneously check if one of the nodes is moved.\n *\n * First we create an array `P` with the length of the new children list and assign to each position value `-1`, it has\n * a meaning of a new node that should be inserted. Later we will assign node positions in the old children list to this\n * array.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *\n * Then we need to build an index `I` that maps keys with node positions of the remaining nodes from the new children\n * list.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [. . . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 0\n *\n * With this index, we start to iterate over the remaining nodes from the old children list and check if we can find a\n * node with the same key in the index. If we can't find any node, it means that it should be removed, otherwise we\n * assign position of the node in the old children list to the positions array.\n *\n *  A: [b c d e f]\n *      ^\n *  B: [c b h f e]\n *  P: [. 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1, <-\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1\n *\n * When we assigning positions to the positions array, we also keep a position of the last seen node in the new children\n * list, if the last seen position is larger than current position of the node at the new list, then we are switching\n * `moved` flag to `true`.\n *\n *  A: [b c d e f]\n *        ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0, <-\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  last = 1 // last > 0; moved = true\n *\n * The last position `1` is larger than current position of the node at the new list `0`, switching `moved` flag to\n * `true`.\n *\n *  A: [b c d e f]\n *          ^\n *  B: [c b h f e]\n *  P: [1 0 . . .] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4,\n *  }\n *  moved = true\n *\n * Node with key \"d\" doesn't exist in the index, removing node.\n *\n *  A: [b c d e f]\n *            ^\n *  B: [c b h f e]\n *  P: [1 0 . . 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3,\n *    e: 4, <-\n *  }\n *  moved = true\n *\n * Assign position for `e`.\n *\n *  A: [b c d e f]\n *              ^\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  I: {\n *    c: 0,\n *    b: 1,\n *    h: 2,\n *    f: 3, <-\n *    e: 4,\n *  }\n *  moved = true\n *\n * Assign position for 'f'.\n *\n * At this point we are checking if `moved` flag is on, or if the length of the old children list minus the number of\n * removed nodes isn't equal to the length of the new children list. If any of this conditions is true, then we are\n * going to the next step.\n *\n * 3. Find minimum number of moves if `moved` flag is on, or insert new nodes if the length is changed.\n *\n * When `moved` flag is on, we need to find the\n * [longest increasing subsequence](http://en.wikipedia.org/wiki/Longest_increasing_subsequence) in the positions array,\n * and move all nodes that doesn't belong to this subsequence.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *  moved = true\n *\n * Now we just need to simultaneously iterate over the new children list and LIS from the end and check if the current\n * position is equal to a value from LIS.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *              ^  // new_pos == 4\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *              ^  // new_pos == 4\n *  moved = true\n *\n * Node \"e\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *            ^    // new_pos == 3\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos != 1\n *  moved = true\n *\n * Node \"f\" is moved, move it before the next node \"e\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *          ^      // new_pos == 2\n *  P: [1 0 . 4 3] // . == -1\n *          ^      // old_pos == -1\n *  LIS:     [1 4]\n *            ^\n *  moved = true\n *\n * Node \"h\" has a `-1` value in the positions array, insert new node \"h\".\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *        ^        // new_pos == 1\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *            ^    // new_pos == 1\n *  moved = true\n *\n * Node \"b\" stays at the same place.\n *\n *  A: [b c d e f]\n *  B: [c b h f e]\n *      ^          // new_pos == 0\n *  P: [1 0 . 4 3] // . == -1\n *  LIS:     [1 4]\n *          ^      // new_pos != undefined\n *  moved = true\n *\n * Node \"c\" is moved, move it before the next node \"b\".\n *\n * When moved flag is off, we don't need to find LIS, and we just iterate over the new children list and check its\n * current position in the positions array, if it is `-1`, then we insert new node.\n *\n * [1] Actually it is almost minimum number of dom ops, when node is removed and another one is inserted at the same\n * place, instead of insert and remove dom ops, we can use one replace op. It will make everything even more\n * complicated, and other use cases will be slower, so I don't think that it is worth to use replace here.\n *\n * @param parent - Parent DOM element\n * @param aStartVNode - Previous virtual DOM node\n * @param bStartVNode - Next virtual DOM node\n * @param context - Current context\n * @param dirtyContext - Context is dirty\n */\nfunction _syncChildrenTrackByKeys(\n  parent: Node,\n  aStartVNode: VNode,\n  bStartVNode: VNode,\n  context: {},\n  dirtyContext: boolean,\n): void;\nfunction _syncChildrenTrackByKeys(\n  parent: Node,\n  aStartVNode: VNode | null, // should not be null, it is a workaroud to slightly reduce code size\n  bStartVNode: VNode | null, // should not be null, it is a workaroud to slightly reduce code size\n  context: {},\n  dirtyContext: boolean,\n): void {\n  let aEndVNode: VNode = aStartVNode!._l!;\n  let bEndVNode: VNode = bStartVNode!._l!;\n  let i: number | undefined = 0;\n  let step1Synced = 0;\n\n  // Step 1\n  outer: while (1) {\n    // Sync nodes with the same key at the beginning.\n    while (\n      (aStartVNode!._k === bStartVNode!._k) &&\n      (((aStartVNode!._f ^ bStartVNode!._f) & VNodeFlags.Key) === 0)\n    ) {\n      syncVNode(parent, aStartVNode!, bStartVNode!, context, dirtyContext);\n      step1Synced++;\n      if (aStartVNode === aEndVNode) {\n        i = 1;\n      } else {\n        aStartVNode = aStartVNode!._r;\n      }\n      if (bStartVNode === bEndVNode) {\n        i |= 2;\n      } else {\n        bStartVNode = bStartVNode!._r;\n      }\n      if (i) {\n        break outer;\n      }\n    }\n\n    // Sync nodes with the same key at the end.\n    while (\n      (aEndVNode!._k === bEndVNode!._k) &&\n      (((aEndVNode!._f ^ bEndVNode!._f) & VNodeFlags.Key) === 0)\n    ) {\n      syncVNode(parent, aEndVNode, bEndVNode, context, dirtyContext);\n      step1Synced++;\n      if (aStartVNode === aEndVNode) {\n        i = 1;\n      } else {\n        aEndVNode = aEndVNode._l;\n      }\n      if (bStartVNode === bEndVNode) {\n        i |= 2;\n      } else {\n        bEndVNode = bEndVNode._l;\n      }\n      if (i) {\n        break outer;\n      }\n    }\n\n    break;\n  }\n\n  if (i) {\n    if (i < 3) {\n      if (i < 2) {\n        // All nodes from a are synced, insert the rest from b.\n        const next = nextNode(bEndVNode);\n        while (1) {\n          renderVNode(parent, next, bStartVNode!, context);\n          if (bStartVNode === bEndVNode) {\n            break;\n          }\n          bStartVNode = bStartVNode!._r;\n        }\n      } else {\n        // All nodes from b are synced, remove the rest from a.\n        while (1) {\n          removeVNode(parent, aStartVNode!);\n          if (aStartVNode === aEndVNode) {\n            break;\n          }\n          aStartVNode = aStartVNode!._r;\n        }\n      }\n    }\n  } else { // Step 2\n    // Inner length after prefix/suffix optimization.\n    let aInnerLength = 0;\n    let bInnerLength = 0;\n\n    // When lastPosition === 1000000000, it means that one of the nodes in the wrong position.\n    let lastPosition = 0;\n\n    const bInnerArray: VNode[] = [];\n    // Reverse indexes for keys.\n    let explicitKeyIndex: Map<any, number> | undefined;\n    let implicitKeyIndex: Map<number, number> | undefined;\n    let key;\n\n    // Temporary vnode\n    let vnode = bStartVNode;\n    while (1) {\n      key = vnode!._k;\n      if (vnode!._f & VNodeFlags.Key) {\n        if (explicitKeyIndex === void 0) {\n          explicitKeyIndex = new Map<any, number>();\n        }\n        explicitKeyIndex.set(key, bInnerLength);\n      } else {\n        if (implicitKeyIndex === void 0) {\n          implicitKeyIndex = new Map<number, number>();\n        }\n        implicitKeyIndex.set(key, bInnerLength);\n      }\n      bInnerArray[bInnerLength++] = vnode!;\n      if (vnode === bEndVNode) {\n        break;\n      }\n      vnode = vnode!._r;\n    }\n\n    // Mark all nodes as inserted (-1).\n    const prevPositionsForB = new Array<number>(bInnerLength).fill(-1);\n\n    let step2Synced = 0;\n    vnode = aStartVNode;\n    while (1) {\n      key = vnode!._k;\n      if (vnode!._f & VNodeFlags.Key) {\n        i = explicitKeyIndex ? explicitKeyIndex.get(key) : void 0;\n      } else {\n        i = implicitKeyIndex ? implicitKeyIndex.get(key) : void 0;\n      }\n\n      if (i === void 0) {\n        vnode!._k = null;\n      } else {\n        lastPosition = (lastPosition > i) ? 1000000000 : i;\n        prevPositionsForB[i] = aInnerLength;\n        syncVNode(parent, vnode!, bInnerArray[i], context, dirtyContext);\n        step2Synced++;\n      }\n      aInnerLength++;\n      if (vnode === aEndVNode) {\n        break;\n      }\n      vnode = vnode!._r;\n    }\n\n    if (!step1Synced && !step2Synced) {\n      // Noone is synced, remove all children with one dom op.\n      _removeAllChildren(parent, aStartVNode!);\n      do {\n        renderVNode(parent, null, bStartVNode!, context);\n        bStartVNode = bStartVNode!._r;\n      } while (bStartVNode !== null);\n    } else {\n      i = aInnerLength - step2Synced;\n      while (i > 0) {\n        if (aStartVNode!._k === null) {\n          removeVNode(parent, aStartVNode!);\n          i--;\n        }\n        aStartVNode = aStartVNode!._r;\n      }\n\n      // Step 3\n      if (lastPosition === 1000000000) {\n        const seq = lis(prevPositionsForB);\n        i = seq.length - 1;\n        while (bInnerLength > 0) {\n          if (prevPositionsForB[--bInnerLength] < 0) {\n            renderVNode(parent, nextNode(bEndVNode), bEndVNode, context);\n          } else {\n            if (i < 0 || bInnerLength !== seq[i]) {\n              /* istanbul ignore else */\n              if (DEBUG) {\n                parent.insertBefore(getDOMInstanceFromVNode(bEndVNode)!, nextNode(bEndVNode));\n              } else {\n                nodeInsertBefore.call(parent, getDOMInstanceFromVNode(bEndVNode)!, nextNode(bEndVNode));\n              }\n            } else {\n              i--;\n            }\n          }\n          bEndVNode = bEndVNode._l;\n        }\n      } else if (step2Synced !== bInnerLength) {\n        while (bInnerLength > 0) {\n          if (prevPositionsForB[--bInnerLength] < 0) {\n            renderVNode(parent, nextNode(bEndVNode), bEndVNode, context);\n          }\n          bEndVNode = bEndVNode._l;\n        }\n      }\n    }\n  }\n}\n\n/**\n * Retrieves a next DOM node from a virtual DOM node.\n *\n * @param vnode - Virtual DOM node\n * @returns Next DOM node\n */\nfunction nextNode(vnode: VNode): Node | null {\n  const next = vnode._r;\n  return next === null ? null : getDOMInstanceFromVNode(next);\n}\n\n/**\n * Slightly modified Longest Increased Subsequence algorithm, it ignores items that have -1 value, they're representing\n * new items.\n *\n * {@link http://en.wikipedia.org/wiki/Longest_increasing_subsequence}\n *\n * @param a - Array of numbers\n * @returns Longest increasing subsequence\n * @noinline\n */\nfunction lis(a: number[]): number[] {\n  const p = a.slice();\n  const result: number[] = [];\n  result.push(0);\n  let u: number;\n  let v: number;\n  let j: number;\n\n  for (let i = 0; i < a.length; ++i) {\n    const k = a[i];\n    if (k === -1) {\n      continue;\n    }\n\n    j = result[result.length - 1];\n    if (a[j] < k) {\n      p[i] = j;\n      result.push(i);\n      continue;\n    }\n\n    u = 0;\n    v = result.length - 1;\n\n    while (u < v) {\n      j = ((u + v) / 2) | 0;\n      if (a[result[j]] < k) {\n        u = j + 1;\n      } else {\n        v = j;\n      }\n    }\n\n    if (k < a[result[u]]) {\n      if (u > 0) {\n        p[i] = result[u - 1];\n      }\n      result[u] = i;\n    }\n  }\n\n  u = result.length;\n  v = result[u - 1];\n\n  while (u-- > 0) {\n    result[u] = v;\n    v = p[v];\n  }\n\n  return result;\n}\n\n/**\n * Check virtual DOM node returned from a `render()` function in `DEBUG` mode.\n *\n * @param vnode - Virtual DOM node\n * @return `vnode`\n */\nfunction shouldBeSingleVNode<T extends VNode>(vnode: T): T {\n  if (vnode._l !== vnode) {\n    throw new Error(\"Invalid render function. Render function should return singular VNode.\");\n  }\n  return vnode;\n}\n","import { IOS_UA, NOOP, unorderedArrayDelete } from \"ivi-core\";\nimport { setUpdateDOMHandler, nextFrameWrite, triggerNextFrame } from \"ivi-scheduler\";\nimport { VNode } from \"./vnode\";\nimport { renderVNode, syncVNode, removeVNode, dirtyCheck } from \"./implementation\";\nimport { checkNestingViolations } from \"../dev_mode/html_nesting_rules\";\n\n/**\n * Root.\n */\nexport interface Root {\n  container: Element;\n  currentVNode: VNode | null;\n  newVNode: VNode | null;\n  invalidated: boolean;\n}\n\n/**\n * Root nodes.\n */\nexport const ROOTS = [] as Root[];\n\n/**\n * Empty Context object.\n */\nconst EMPTY_CONTEXT = {};\n\nlet _pendingUpdate = 0;\n\n/**\n * Find Root node in container.\n *\n * @param container - DOM Node that contains root node\n * @returns root node or undefined when root node doesn't exist\n */\nexport function findRoot(container: Element): Root | void {\n  for (const root of ROOTS) {\n    if (root.container === container) {\n      return root;\n    }\n  }\n}\n\n/**\n * Update root nodes.\n */\nfunction _update() {\n  if (_pendingUpdate) {\n    _pendingUpdate = 0;\n    setUpdateDOMHandler(update);\n    for (let i = 0; i < ROOTS.length; ++i) {\n      const root = ROOTS[i];\n      const container = root.container;\n      const currentVNode = root.currentVNode;\n\n      if (root.invalidated) {\n        const newVNode = root.newVNode;\n\n        if (newVNode) {\n          if (currentVNode) {\n            syncVNode(container, currentVNode, newVNode, EMPTY_CONTEXT, false);\n          } else {\n            renderVNode(container, null, newVNode!, EMPTY_CONTEXT);\n            /* istanbul ignore if */\n            /**\n             * Fix for the Mouse Event bubbling on iOS devices.\n             *\n             * #quirks\n             *\n             * http://www.quirksmode.org/blog/archives/2014/02/mouse_event_bub.html\n             */\n            if (TARGET === \"browser\" && IOS_UA) {\n              (container as HTMLElement).onclick = NOOP;\n            }\n          }\n          root.currentVNode = newVNode;\n        } else if (currentVNode) {\n          removeVNode(container, currentVNode);\n          unorderedArrayDelete(ROOTS, ROOTS.indexOf(root));\n          --i;\n        }\n\n        root.newVNode = null;\n        root.invalidated = false;\n      } else if (currentVNode) {\n        dirtyCheck(container, currentVNode, EMPTY_CONTEXT, false);\n      }\n\n      /* istanbul ignore else */\n      if (DEBUG) {\n        if (root.currentVNode) {\n          checkNestingViolations(container, root.currentVNode);\n        }\n      }\n    }\n  }\n}\n\n/**\n * Render virtual DOM node into container.\n *\n * @param vnode - Virtual DOM node to render\n * @param container - DOM Node that will contain rendered node\n */\nexport function render(vnode: VNode | null, container: Element): void {\n  renderNextFrame(vnode, container);\n  triggerNextFrame();\n}\n\n/**\n * Render virtual DOM node into container on the next frame.\n *\n * @param vnode - Virtual DOM node to render\n * @param container - DOM Node that will contain rendered node\n */\nexport function renderNextFrame(vnode: VNode | null, container: Element): void {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (container === document.body) {\n      throw new Error(\"Rendering in the <body> aren't allowed, create an element inside body that will contain \" +\n        \"your application.\");\n    }\n    if (!document.body.contains(container)) {\n      throw new Error(\"Container element should be attached to the document.\");\n    }\n  }\n\n  const root = findRoot(container);\n  if (root) {\n    root.newVNode = vnode;\n    root.invalidated = true;\n  } else {\n    ROOTS.push({\n      container,\n      currentVNode: null,\n      newVNode: vnode,\n      invalidated: true,\n    });\n  }\n\n  updateNextFrame();\n}\n\n/**\n * Update dirty components.\n */\nexport function update() {\n  updateNextFrame();\n  triggerNextFrame();\n}\n\n/**\n * Add a task to update dirty components that will be executed at the next frame.\n */\nexport function updateNextFrame() {\n  if (!_pendingUpdate) {\n    _pendingUpdate = 1;\n    nextFrameWrite(_update);\n  }\n}\n","import { VNodeFlags } from \"./flags\";\nimport { StatefulComponent, StatelessComponent } from \"./component\";\nimport { VNode } from \"./vnode\";\nimport { ConnectDescriptor } from \"./connect_descriptor\";\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<{ text: string }>(\n *       (props) => h.div().c(props.text),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param render - Render function\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent(c: () => VNode): () => VNode<undefined>;\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<{ text: string }>(\n *       (props) => h.div().c(props.text),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param render - Render function\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent<P>(\n  render: undefined extends P ? (props?: P) => VNode<any> : (props: P) => VNode<any>,\n): undefined extends P ? (props?: P) => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * statelessComponent creates a virtual DOM node factory that produces nodes for stateless components.\n *\n * @example\n *\n *     const A = statelessComponent<{ text: string }>(\n *       (props) => h.div().c(props.text),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param render - Render function\n * @returns factory that produces stateless component nodes\n */\nexport function statelessComponent<P>(render: (props: P) => VNode<any>): (props: P) => VNode<P> {\n  const d = { render, shouldUpdate: null };\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.StatelessComponent,\n      d,\n      props,\n      void 0,\n      null,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n\n/**\n * withShouldUpdate creates a virtual DOM node factory that produces nodes for stateless components with custom\n * `shouldUpdate` function to prevent unnecessary updates.\n *\n * @example\n *\n *     const A = withShouldUpdate<{ text: string }>(\n *       (prevProps, nextProps) => prevProps.text !== nextProps.text,\n *       statelessComponent(\n *         (props) => h.div().c(props.text),\n *       ),\n *     );\n *\n *     render(\n *       A({ text: \"Hello\" }),\n *       DOMContainer,\n *     );\n *\n * @param shouldUpdate - Function that performs an early check that prevent unnecessary updates\n * @param factory - Factory that produces stateless component nodes\n * @returns factory that produces stateless component nodes\n */\nexport function withShouldUpdate<P>(\n  shouldUpdate: (oldProps: P, newProps: P) => boolean,\n  factory: (props: P) => VNode<P>,\n): (props: P) => VNode<P> {\n  const v = factory(null as any);\n  const d = { render: (v._t as StatelessComponent<P>).render, shouldUpdate };\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.StatelessComponent | VNodeFlags.ShouldUpdateHint,\n      d,\n      props,\n      void 0,\n      null,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n\n/**\n * statefulComponent creates a virtual DOM node factory that produces nodes for stateful components.\n *\n * @example\n *\n *     const A = component(class extends Component<string> {\n *       onClick = Events.onClick(() => console.log(this.props));\n *\n *       render() {\n *         return (\n *           h.button()\n *             .e(this.onClick)\n *             .c(\"Click Me\")\n *         );\n *       }\n *     });\n *\n *     render(\n *       A(\"clicked\"),\n *       DOMContainer,\n *     );\n *\n * @param c - Stateful component\n * @returns factory that produces stateful component nodes\n */\nexport function statefulComponent(c: StatefulComponent<undefined>): () => VNode<undefined>;\n\n/**\n * statefulComponent creates a virtual DOM node factory that produces nodes for stateful components.\n *\n * @example\n *\n *     const A = component(class extends Component<string> {\n *       onClick = Events.onClick(() => console.log(this.props));\n *\n *       render() {\n *         return (\n *           h.button()\n *             .e(this.onClick)\n *             .c(\"Click Me\")\n *         );\n *       }\n *     });\n *\n *     render(\n *       A(\"clicked\"),\n *       DOMContainer,\n *     );\n *\n * @param c - Stateful component\n * @returns factory that produces stateful component nodes\n */\nexport function statefulComponent<P>(\n  c: StatefulComponent<P>,\n): undefined extends P ? (props?: P) => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * statefulComponent creates a virtual DOM node factory that produces nodes for stateful components.\n *\n * @example\n *\n *     const A = component(class extends Component<string> {\n *       onClick = Events.onClick(() => console.log(this.props));\n *\n *       render() {\n *         return (\n *           h.button()\n *             .e(this.onClick)\n *             .c(\"Click Me\")\n *         );\n *       }\n *     });\n *\n *     render(\n *       A(\"clicked\"),\n *       DOMContainer,\n *     );\n *\n * @param c - Stateful component\n * @returns factory that produces stateful component nodes\n */\nexport function statefulComponent<P>(\n  c: StatefulComponent<P>,\n): (props: P) => VNode<P> {\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.StatefulComponent,\n      c,\n      props,\n      void 0,\n      null,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n\n/**\n * context creates a virtual DOM node that will modify current context.\n *\n * @example\n *\n *     render(\n *       context({ key: 123 },\n *         ChildComponent(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param ctx - Context object\n * @param child - child Virtual DOM node\n * @returns context node\n */\nexport function context<T = {}>(ctx: T, child: VNode): VNode<T> {\n  /* istanbul ignore else */\n  if (DEBUG) {\n    if (child._l !== child) {\n      throw new Error(\"Context node contains an invalid child. Child should be a singular VNode.\");\n    }\n  }\n  return new VNode<T>(\n    VNodeFlags.UpdateContext,\n    null,\n    ctx,\n    void 0,\n    child,\n  );\n}\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => h.div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T>(\n  select: (prev: T | null) => T,\n  render: (props: T) => VNode<any>,\n): () => VNode<undefined>;\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => h.div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T, P>(\n  select: undefined extends P ? (prev: T | null, props?: P) => T : (prev: T | null, props: P) => T,\n  render: (props: T) => VNode<any>,\n): undefined extends P ? (props?: P) => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => h.div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T, P, C>(\n  select: (prev: T | null, props: P, context: C) => T,\n  render: (props: T) => VNode<any>,\n): undefined extends P ? () => VNode<P> : (props: P) => VNode<P>;\n\n/**\n * connect creates a virtual DOM node factory that produces connector nodes.\n *\n * @example\n *\n *     const Connector = connect<string, undefined, { result: string }>(\n *       (prev, props, context) => {\n *         const result = context.result;\n *\n *         return (prev !== null && prev === result) ? prev :\n *           result;\n *       },\n *       (text) => h.div().c(text),\n *     );\n *\n *     render(\n *       context({ result: \"text\" },\n *         Connector(),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param select - Selector function\n * @param render - Render function\n * @returns factory that produces connector nodes\n */\nexport function connect<T, P, C>(\n  select: (prev: T | null, props: P, context: C) => T,\n  render: (props: T) => VNode<any>,\n): (props: P) => VNode<P> {\n  const descriptor = { select, render };\n  const f = (props: P) => {\n    const n = new VNode<P>(\n      VNodeFlags.Connect,\n      descriptor as ConnectDescriptor<any, any, {}>,\n      props,\n      void 0,\n      null,\n    );\n    /* istanbul ignore else */\n    if (DEBUG) {\n      n.factory = f;\n    }\n    return n;\n  };\n  return f;\n}\n","import { DispatchTarget } from \"./dispatch_target\";\nimport { EventHandler } from \"./event_handler\";\nimport { VNodeFlags } from \"../vdom/flags\";\nimport { VNode } from \"../vdom/vnode\";\nimport { ROOTS } from \"../vdom/root\";\n\n/**\n * accumulateDispatchTargets traverses the DOM tree from the `target` Element to the document top and accumulates\n * matching Event Handlers in `result` array.\n *\n * @param result Accumulated Dispatch Targets.\n * @param target Target DOM Element.\n * @param match Matching function.\n */\nexport function accumulateDispatchTargets(\n  result: DispatchTarget[],\n  target: Element,\n  match: (h: EventHandler) => boolean,\n): void {\n  // Find a root element that contains a `target` node.\n  for (const root of ROOTS) {\n    const container = root.container;\n    if (container.contains(target)) {\n      // Build an array with all parent elements.\n      const domTargets: Element[] = [];\n      while (target !== container) {\n        domTargets.push(target!);\n        target = target.parentNode! as Element;\n      }\n      // Visit virtual DOM nodes that correspond to the list of all parent elements that were extracted from `target`.\n      visitMatchingDOMTargets(result, match, root.currentVNode!, domTargets, domTargets.length - 1);\n      break;\n    }\n  }\n}\n\nfunction visitMatchingDOMTargets(\n  result: DispatchTarget[],\n  match: (h: EventHandler) => boolean,\n  vnode: VNode,\n  nodes: Element[],\n  index: number,\n): 0 | 1 {\n  const flags = vnode._f;\n  if (flags & (VNodeFlags.Element | VNodeFlags.ElementFactory)) {\n    if (vnode._i === nodes[index]) {\n      if (index === 0) {\n        accumulateDispatchTargetsFromVNode(result, vnode, match);\n        return 1;\n      } else {\n        --index;\n        let child = vnode._c as VNode | null;\n        while (child !== null) {\n          if (visitMatchingDOMTargets(result, match, child, nodes, index)) {\n            accumulateDispatchTargetsFromVNode(result, vnode, match);\n            return 1;\n          }\n          child = child._r;\n        }\n      }\n    }\n  } else if (flags & (\n    VNodeFlags.StatelessComponent |\n    VNodeFlags.StatefulComponent |\n    VNodeFlags.Connect |\n    VNodeFlags.UpdateContext\n  )) {\n    if (visitMatchingDOMTargets(result, match, vnode._c as VNode, nodes, index)) {\n      accumulateDispatchTargetsFromVNode(result, vnode, match);\n      return 1;\n    }\n  }\n\n  return 0;\n}\n\n/**\n * accumulateDispatchTargetsFromElement accumulates matching Event Handlers in `result` array from the `target` Element.\n *\n * @param result Accumulated Dispatch Targets.\n * @param target Target Element.\n * @param match Matching function.\n */\nfunction accumulateDispatchTargetsFromVNode(\n  result: DispatchTarget[],\n  target: VNode,\n  match: (h: EventHandler) => boolean,\n): void {\n  const events = target._e;\n  if (events) {\n    let handlers: EventHandler[] | EventHandler | undefined;\n    if (Array.isArray(events)) {\n      let count = 0;\n      for (const h of events) {\n        if (h !== null && match(h) === true) {\n          if (count === 0) {\n            handlers = h;\n          } else if (count === 1) {\n            handlers = [handlers as EventHandler, h];\n          } else {\n            (handlers as EventHandler[]).push(h);\n          }\n          ++count;\n        }\n      }\n    } else {\n      if (match(events) === true) {\n        handlers = events;\n      }\n    }\n    if (handlers !== void 0) {\n      result.push({ target, handlers });\n    }\n  }\n}\n","import { EventHandlerFlags, EventFlags, SyntheticEventFlags } from \"./flags\";\nimport { DispatchTarget } from \"./dispatch_target\";\nimport { EventHandler } from \"./event_handler\";\nimport { SyntheticEvent } from \"./synthetic_event\";\n\n/**\n * dispatchEvent dispatches event to the list of dispatch targets.\n *\n * Simplified version of w3 Events flow algorithm. This algorithm doesn't include target phase, only capture and\n * bubbling phases. We don't care too much about w3 events compatibility, and there aren't any use cases that require\n * target phase.\n *\n * https://www.w3.org/TR/DOM-Level-3-Events/#event-flow\n *\n * @param targets Dispatch targets.\n * @param event Event to dispatch.\n * @param bubble Use bubbling phase.\n * @param dispatch Dispatch callback.\n */\nexport function dispatchEvent(\n  targets: DispatchTarget[],\n  event: SyntheticEvent,\n  bubble: boolean,\n  dispatch?: (h: EventHandler, ev: SyntheticEvent) => EventFlags | void,\n): void {\n  let i = targets.length - 1;\n\n  // capture phase\n  while (i >= 0) {\n    dispatchEventToLocalEventHandlers(targets[i--], event, EventHandlerFlags.Capture, dispatch);\n    if (event.flags & SyntheticEventFlags.StoppedPropagation) {\n      return;\n    }\n  }\n\n  // bubble phase\n  if (bubble) {\n    event.flags |= SyntheticEventFlags.BubblePhase;\n    for (i = 0; i < targets.length; ++i) {\n      dispatchEventToLocalEventHandlers(targets[i], event, EventHandlerFlags.Bubble, dispatch);\n      if (event.flags & SyntheticEventFlags.StoppedPropagation) {\n        return;\n      }\n    }\n  }\n}\n\n/**\n * dispatchEventToLocalEventHandlers dispatches event to local(at the same DOM Node) event handlers.\n *\n * @param target Dispatch Target.\n * @param event Synthetic Event.\n * @param matchFlags Flags that should match to deliver event.\n * @param dispatch Dispatch callback.\n */\nfunction dispatchEventToLocalEventHandlers(\n  target: DispatchTarget,\n  event: SyntheticEvent,\n  matchFlags: EventHandlerFlags,\n  dispatch: ((h: EventHandler, ev: SyntheticEvent) => EventFlags | void) | undefined,\n): void {\n  const handlers = target.handlers;\n  let flags: EventFlags = 0;\n\n  if (Array.isArray(handlers)) {\n    for (const handler of handlers) {\n      if (handler.flags & matchFlags) {\n        flags |= _dispatch(handler, dispatch, event);\n      }\n    }\n  } else if (handlers.flags & matchFlags) {\n    flags = _dispatch(handlers, dispatch, event);\n  }\n\n  event.flags |= flags;\n}\n\nfunction _dispatch(\n  handler: EventHandler,\n  dispatch: ((h: EventHandler, ev: SyntheticEvent) => EventFlags | void) | undefined,\n  event: SyntheticEvent,\n): EventFlags {\n  const flags = (dispatch === void 0) ? handler.handler(event) : dispatch(handler, event);\n  if (DEBUG) {\n    if (flags !== void 0) {\n      if (flags & ~(EventFlags.PreventDefault | EventFlags.StopPropagation)) {\n        throw new Error(`Invalid event flags: ${flags}`);\n      }\n    }\n  }\n  return (flags === void 0) ? 0 : flags;\n}\n","/**\n * Feature Detection is used to implement polyfills or just disable some features when browser doesn't support them.\n * For example, when browser doesn't support passive events, we can just ignore it and always use active events.\n */\n\n/* istanbul ignore next */\n/**\n * Passive event listeners are a new feature in the DOM spec that enable developers to opt-in to better scroll\n * performance by eliminating the need for scrolling to block on touch and wheel event listeners. Developers can\n * annotate touch and wheel listeners with {passive: true} to indicate that they will never invoke preventDefault.\n *\n * https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nexport const PASSIVE_EVENTS = (TARGET === \"electron\") ? true :\n  /*#__PURE__*/(() => {\n    let v = false;\n    try {\n      // Test via a getter in the options object to see if the passive property is accessed\n      const opts = Object.defineProperty({}, \"passive\", {\n        get() {\n          v = true;\n        },\n      });\n      window.addEventListener(\"test\", null as any as (ev: Event) => void, opts);\n    } catch (e) {\n      // ignore\n    }\n    return v;\n  })();\n\n/* istanbul ignore next */\n/**\n * `key` property is available on KeyboardEvent instances.\n */\nexport const KEYBOARD_EVENT_KEY = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  KeyboardEvent.prototype.hasOwnProperty(\"key\")\n);\n\n/* istanbul ignore next */\n/**\n * `buttons` property is available on MouseEvent instances.\n */\nexport const MOUSE_EVENT_BUTTONS = /*#__PURE__*/(\n  (TARGET === \"electron\") ||\n  (TARGET === \"evergreen\") ||\n  MouseEvent.prototype.hasOwnProperty(\"buttons\")\n);\n\n/* istanbul ignore next */\n/**\n * Touch Events support.\n */\nexport const TOUCH_EVENTS = (\"ontouchstart\" in window);\n\n/* istanbul ignore next */\n/**\n * Pointer Events support.\n */\nexport const POINTER_EVENTS = ((TARGET === \"electron\") || (\"PointerEvent\" in window));\n\n/* istanbul ignore next */\n/**\n * InputDeviceCapabilities support.\n *\n * http://wicg.github.io/InputDeviceCapabilities/\n */\nexport const INPUT_DEVICE_CAPABILITIES = ((TARGET === \"electron\") || \"InputDeviceCapabilities\" in window);\n","import { PASSIVE_EVENTS } from \"ivi-core\";\nimport { NativeEventSourceFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\n\n/**\n * Extends Element interface with a special property that is used to assign synthetic event handlers list.\n */\ndeclare global {\n  interface Element {\n    _ev: Array<EventHandler | null> | EventHandler | null | undefined;\n  }\n}\n\n/* istanbul ignore next */\n/**\n * getEventTarget retrieves target element from an event.\n *\n * There are still some differences in modern browsers, so we need to use this function to retrieve event targets.\n *\n * #quirks\n *\n * @param ev Event.\n * @returns Target Element.\n */\nexport function getEventTarget(ev: Event): EventTarget {\n  let target = ev.target || window;\n\n  /**\n   * Some browsers are implementing it according to SVG 1.1 specs:\n   *\n   * https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/7998724/\n   *\n   * \"If event attributes are assigned to referenced elements, then the actual target for the event will be the\n   * SVGElementInstance object within the 'instance tree' corresponding to the given referenced element.\"\n   *\n   * https://www.w3.org/TR/SVG/struct.html#UseElement\n   *\n   * SVG 2 redefined the use event handling model:\n   *\n   * - Removed the SVGElementInstance and SVGElementInstanceList interfaces, and the corresponding attributes on the\n   *   SVGUseElement interface.\n   * - Changed the ‘use’ element event flow to follow the Shadow DOM spec.\n   *\n   * https://www.w3.org/TR/SVG2/changes.html#structure\n   */\n  if ((target as any).correspondingUseElement !== undefined) {\n    target = (target as any).correspondingUseElement;\n  }\n\n  return target;\n}\n\n/* istanbul ignore next */\n/**\n * `{ capture: true, passive: true }` object that should be used as a 3rd parameter for `addEventListener` method.\n */\nexport const EVENT_CAPTURE_PASSIVE_OPTIONS = PASSIVE_EVENTS ? { \"capture\": true, \"passive\": true } : true;\n\n/* istanbul ignore next */\n/**\n * `{ capture: true, passive: false }` object that should be used as a 3rd parameter for `addEventListener` method.\n */\nexport const EVENT_CAPTURE_ACTIVE_OPTIONS = PASSIVE_EVENTS ? { \"capture\": true, \"passive\": false } : true;\n\n/* istanbul ignore next */\n/**\n * `{ passive: true }` object that should be used as a 3rd parameter for `addEventListener` method.\n */\nexport const EVENT_PASSIVE_OPTIONS = PASSIVE_EVENTS ? { \"passive\": true } : false;\n\n/* istanbul ignore next */\n/**\n * `{ passive: false }` object that should be used as a 3rd parameter for `addEventListener` method.\n */\nexport const EVENT_ACTIVE_OPTIONS = PASSIVE_EVENTS ? { \"passive\": false } : false;\n\n/* istanbul ignore next */\n/**\n * getNativeEventOptions converts `NativeEventSourceFlags` to event options that can be used as a 3rd parameter\n * for `addEventListener` method.\n *\n * #quirks\n *\n * @param flags See `NativeEventSourceFlags` for details.\n * @returns Option object that can be used as a 3rd parameter for `addEventListener` method.\n */\nexport function getNativeEventOptions(\n  flags: NativeEventSourceFlags,\n): boolean | { capture?: boolean, passive?: boolean } {\n  if (flags & NativeEventSourceFlags.Passive) {\n    if (flags & NativeEventSourceFlags.Capture) {\n      return EVENT_CAPTURE_PASSIVE_OPTIONS;\n    }\n    return EVENT_PASSIVE_OPTIONS;\n  }\n  if (flags & NativeEventSourceFlags.Capture) {\n    return EVENT_CAPTURE_ACTIVE_OPTIONS;\n  }\n  return EVENT_ACTIVE_OPTIONS;\n}\n","import { SyntheticEventFlags } from \"./flags\";\n\n/**\n * SyntheticEvent is a base class for all synthetic events.\n */\nexport class SyntheticEvent {\n  /**\n   * See {@link SyntheticEventFlags} for details.\n   */\n  flags: SyntheticEventFlags;\n  /**\n   * Timestamp when event was created.\n   */\n  readonly timestamp: number;\n\n  constructor(\n    flags: SyntheticEventFlags,\n    timestamp: number,\n  ) {\n    this.flags = flags;\n    this.timestamp = timestamp;\n  }\n}\n","import { SyntheticEventFlags } from \"./flags\";\nimport { SyntheticEvent } from \"./synthetic_event\";\n\n/**\n * SyntheticNativeEvent is a wrapper for native events.\n */\nexport class SyntheticNativeEvent<E extends Event> extends SyntheticEvent {\n  /**\n   * Event target.\n   */\n  readonly target: EventTarget;\n  /**\n   * Native event.\n   */\n  readonly native: E;\n\n  constructor(\n    flags: SyntheticEventFlags,\n    target: EventTarget,\n    timestamp: number,\n    native: E,\n  ) {\n    super(flags, timestamp);\n    this.target = target;\n    this.native = native;\n  }\n}\n","import { append, unorderedArrayDelete, catchError } from \"ivi-core\";\nimport { SyntheticEventFlags, NativeEventSourceFlags } from \"./flags\";\nimport { EventDispatcher } from \"./event_dispatcher\";\nimport { EventHandler } from \"./event_handler\";\nimport { DispatchTarget } from \"./dispatch_target\";\nimport { accumulateDispatchTargets } from \"./accumulate_dispatch_targets\";\nimport { dispatchEvent } from \"./dispatch_event\";\nimport { getEventTarget, getNativeEventOptions } from \"./utils\";\nimport { SyntheticNativeEvent } from \"./synthetic_native_event\";\n\n/**\n * NativeEventSource dispatches native events.\n *\n * It is using two-phase dispatching algorithm similar to native DOM events flow.\n */\nexport interface NativeEventDispatcher<E extends Event> {\n  /**\n   * Public EventSource interface.\n   */\n  readonly src: EventDispatcher;\n  /**\n   * Number of active dependencies.\n   *\n   * When there are active dependencies, event source will be activated by attaching native event listeners to the\n   * document. When it goes to zero it will be deactivated, and all event listeners will be removed.\n   */\n  deps: number;\n  /**\n   * Number of active listeners.\n   */\n  listeners: number;\n  /**\n   * See `NativeEventSourceFlags` for details.\n   */\n  flags: NativeEventSourceFlags;\n  /**\n   * DOM event name.\n   */\n  readonly name: string;\n  before: Array<(ev: SyntheticNativeEvent<E>) => void> | null;\n  after: Array<(ev: SyntheticNativeEvent<E>) => void> | null;\n  dispatch: (() => void) | null;\n}\n\nexport function createNativeEventDispatcher<E extends Event>(\n  flags: NativeEventSourceFlags,\n  name: string,\n): NativeEventDispatcher<E> {\n  const source: NativeEventDispatcher<E> = {\n    src: {\n      add: () => { ++source.listeners; incDependencies(source); },\n      remove: () => { --source.listeners; decDependencies(source); },\n    },\n    deps: 0,\n    listeners: 0,\n    flags,\n    name,\n    before: null,\n    after: null,\n    dispatch: null,\n  };\n\n  const matchEventSource = (h: EventHandler) => h.src === source.src;\n\n  source.dispatch = catchError((ev: E): void => {\n    const domTarget = getEventTarget(ev) as Element;\n    const targets: DispatchTarget[] = [];\n\n    if (source.listeners > 0) {\n      accumulateDispatchTargets(targets, domTarget, matchEventSource);\n    }\n\n    if (targets.length || source.before !== null || source.after !== null) {\n      const syntheticEvent = new SyntheticNativeEvent<E>(0, domTarget, ev.timeStamp, ev);\n\n      dispatchToListeners(source.before, syntheticEvent);\n      if (targets.length) {\n        dispatchEvent(targets, syntheticEvent, (source.flags & NativeEventSourceFlags.Bubbles) !== 0);\n      }\n      dispatchToListeners(source.after, syntheticEvent);\n\n      if ((syntheticEvent.flags & SyntheticEventFlags.PreventedDefault) !== 0) {\n        ev.preventDefault();\n      }\n    }\n  });\n\n  return source;\n}\n\nexport function beforeNativeEvent<E extends Event>(\n  source: NativeEventDispatcher<E>,\n  cb: (e: SyntheticNativeEvent<E>) => void,\n): void {\n  source.before = append(source.before, cb);\n  incDependencies(source);\n}\n\nexport function afterNativeEvent<E extends Event>(\n  source: NativeEventDispatcher<E>,\n  cb: (e: SyntheticNativeEvent<E>) => void,\n): void {\n  source.after = append(source.after, cb);\n  incDependencies(source);\n}\n\nexport function removeBeforeNativeEvent<E extends Event>(\n  source: NativeEventDispatcher<E>,\n  cb: (e: SyntheticNativeEvent<E>) => void,\n): void {\n  if (DEBUG) {\n    if (source.before === null || source.before.indexOf(cb) === -1) {\n      throw new Error(\"removeBeforeNativeEvent() failed, unable to find registered callback\");\n    }\n  }\n  unorderedArrayDelete(source.before!, source.before!.indexOf(cb));\n  decDependencies(source);\n}\n\nexport function removeAfterNativeEvent<E extends Event>(\n  source: NativeEventDispatcher<E>,\n  cb: (e: SyntheticNativeEvent<E>) => void,\n): void {\n  if (DEBUG) {\n    if (source.after === null || source.after.indexOf(cb) === -1) {\n      throw new Error(\"removeAfterNativeEvent() failed, unable to find registered callback\");\n    }\n  }\n  unorderedArrayDelete(source.after!, source.after!.indexOf(cb));\n  decDependencies(source);\n}\n\nfunction incDependencies<E extends Event>(source: NativeEventDispatcher<E>): void {\n  if (source.deps++ === 0) {\n    document.addEventListener(\n      source.name,\n      source.dispatch!,\n      getNativeEventOptions(source.flags) as boolean,\n    );\n  }\n}\n\nfunction decDependencies<E extends Event>(source: NativeEventDispatcher<E>): void {\n  if (--source.deps === 0) {\n    document.removeEventListener(\n      source.name,\n      source.dispatch!,\n      getNativeEventOptions(source.flags) as boolean,\n    );\n  }\n}\n\nfunction dispatchToListeners<E extends Event>(\n  listeners: Array<(ev: SyntheticNativeEvent<E>) => void> | null,\n  ev: SyntheticNativeEvent<E>,\n): void {\n  if (listeners !== null) {\n    const cbs = listeners.slice();\n    for (const cb of cbs) {\n      cb(ev);\n    }\n  }\n}\n","/**\n * Event Handlers.\n *\n * Optimizing compilers should inline all this functions and completely remove unused code.\n */\n\nimport { EventHandlerFlags, EventFlags, NativeEventSourceFlags } from \"./flags\";\nimport { EventHandler } from \"./event_handler\";\nimport { EventDispatcher } from \"./event_dispatcher\";\nimport { NativeEventDispatcher, createNativeEventDispatcher } from \"./native_event_dispatcher\";\nimport { SyntheticNativeEvent } from \"./synthetic_native_event\";\n\n/* tslint:disable:max-line-length */\nexport const EVENT_DISPATCHER_ABORT = /*#__PURE__*/createNativeEventDispatcher<UIEvent>(NativeEventSourceFlags.Capture, \"abort\") as NativeEventDispatcher<UIEvent>;\nexport const EVENT_DISPATCHER_ACTIVATE = /*#__PURE__*/createNativeEventDispatcher<UIEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"activate\");\nexport const EVENT_DISPATCHER_ARIA_REQUEST = /*#__PURE__*/createNativeEventDispatcher<UIEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"ariarequest\");\nexport const EVENT_DISPATCHER_BEFORE_ACTIVATE = /*#__PURE__*/createNativeEventDispatcher<UIEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"beforeactivate\");\nexport const EVENT_DISPATCHER_BEFORE_COPY = /*#__PURE__*/createNativeEventDispatcher<ClipboardEvent>(NativeEventSourceFlags.Capture, \"beforecopy\");\nexport const EVENT_DISPATCHER_BEFORE_CUT = /*#__PURE__*/createNativeEventDispatcher<ClipboardEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"beforecut\");\nexport const EVENT_DISPATCHER_BEFORE_DEACTIVATE = /*#__PURE__*/createNativeEventDispatcher<UIEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"beforedeactivate\");\nexport const EVENT_DISPATCHER_BEFORE_PASTE = /*#__PURE__*/createNativeEventDispatcher<ClipboardEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"beforepaste\");\nexport const EVENT_DISPATCHER_BLUR = /*#__PURE__*/createNativeEventDispatcher<FocusEvent>(NativeEventSourceFlags.Capture, \"blur\");\nexport const EVENT_DISPATCHER_CAN_PLAY = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"canplay\");\nexport const EVENT_DISPATCHER_CAN_PLAYTHROUGH = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"canplaythrough\");\nexport const EVENT_DISPATCHER_CHANGE = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"change\");\nexport const EVENT_DISPATCHER_CLICK = /*#__PURE__*/createNativeEventDispatcher<MouseEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"click\");\nexport const EVENT_DISPATCHER_CONTEXT_MENU = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"contextmenu\");\nexport const EVENT_DISPATCHER_COPY = /*#__PURE__*/createNativeEventDispatcher<ClipboardEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"copy\");\nexport const EVENT_DISPATCHER_CUE_CHANGE = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"cuechange\");\nexport const EVENT_DISPATCHER_CUT = /*#__PURE__*/createNativeEventDispatcher<ClipboardEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"cut\");\nexport const EVENT_DISPATCHER_DOUBLE_CLICK = /*#__PURE__*/createNativeEventDispatcher<MouseEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dblclick\");\nexport const EVENT_DISPATCHER_DEACTIVATE = /*#__PURE__*/createNativeEventDispatcher<UIEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"deactivate\");\nexport const EVENT_DISPATCHER_DRAG = /*#__PURE__*/createNativeEventDispatcher<DragEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"drag\");\nexport const EVENT_DISPATCHER_DRAG_END = /*#__PURE__*/createNativeEventDispatcher<DragEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dragend\");\nexport const EVENT_DISPATCHER_DRAG_ENTER = /*#__PURE__*/createNativeEventDispatcher<DragEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dragenter\");\nexport const EVENT_DISPATCHER_DRAG_LEAVE = /*#__PURE__*/createNativeEventDispatcher<DragEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dragleave\");\nexport const EVENT_DISPATCHER_DRAG_OVER = /*#__PURE__*/createNativeEventDispatcher<DragEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dragover\");\nexport const EVENT_DISPATCHER_DRAG_START = /*#__PURE__*/createNativeEventDispatcher<DragEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"dragstart\");\nexport const EVENT_DISPATCHER_DROP = /*#__PURE__*/createNativeEventDispatcher<DragEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"drop\");\nexport const EVENT_DISPATCHER_DURATION_CHANGE = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"durationchange\");\nexport const EVENT_DISPATCHER_EMPTIED = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"emptied\");\nexport const EVENT_DISPATCHER_ENCRYPTED = /*#__PURE__*/createNativeEventDispatcher<MediaEncryptedEvent>(NativeEventSourceFlags.Capture, \"encrypted\");\nexport const EVENT_DISPATCHER_ENDED = /*#__PURE__*/createNativeEventDispatcher<MediaStreamErrorEvent>(NativeEventSourceFlags.Capture, \"ended\");\nexport const EVENT_DISPATCHER_ERROR = /*#__PURE__*/createNativeEventDispatcher<ErrorEvent>(NativeEventSourceFlags.Capture, \"error\");\nexport const EVENT_DISPATCHER_FOCUS = /*#__PURE__*/createNativeEventDispatcher<FocusEvent>(NativeEventSourceFlags.Capture, \"focus\");\nexport const EVENT_DISPATCHER_GOT_POINTER_CAPTURE = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture, \"gotpointercapture\");\nexport const EVENT_DISPATCHER_INPUT = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"input\");\nexport const EVENT_DISPATCHER_INVALID = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"invalid\");\nexport const EVENT_DISPATCHER_KEY_DOWN = /*#__PURE__*/createNativeEventDispatcher<KeyboardEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"keydown\");\nexport const EVENT_DISPATCHER_KEY_PRESS = /*#__PURE__*/createNativeEventDispatcher<KeyboardEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"keypress\");\nexport const EVENT_DISPATCHER_KEY_UP = /*#__PURE__*/createNativeEventDispatcher<KeyboardEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"keyup\");\nexport const EVENT_DISPATCHER_LOAD = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"load\");\nexport const EVENT_DISPATCHER_LOADED_DATA = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"loadeddata\");\nexport const EVENT_DISPATCHER_LOADED_METADATA = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"loadedmetadata\");\nexport const EVENT_DISPATCHER_LOAD_START = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"loadstart\");\nexport const EVENT_DISPATCHER_LOST_POINTER_CAPTURE = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture, \"lostpointercapture\");\nexport const EVENT_DISPATCHER_MOUSE_DOWN = /*#__PURE__*/createNativeEventDispatcher<MouseEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"mousedown\");\nexport const EVENT_DISPATCHER_MOUSE_ENTER = /*#__PURE__*/createNativeEventDispatcher<MouseEvent>(NativeEventSourceFlags.Capture, \"mouseenter\");\nexport const EVENT_DISPATCHER_MOUSE_LEAVE = /*#__PURE__*/createNativeEventDispatcher<MouseEvent>(NativeEventSourceFlags.Capture, \"mouseleave\");\nexport const EVENT_DISPATCHER_MOUSE_MOVE = /*#__PURE__*/createNativeEventDispatcher<MouseEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"mousemove\");\nexport const EVENT_DISPATCHER_MOUSE_OUT = /*#__PURE__*/createNativeEventDispatcher<MouseEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"mouseout\");\nexport const EVENT_DISPATCHER_MOUSE_OVER = /*#__PURE__*/createNativeEventDispatcher<MouseEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"mouseover\");\nexport const EVENT_DISPATCHER_MOUSE_UP = /*#__PURE__*/createNativeEventDispatcher<MouseEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"mouseup\");\nexport const EVENT_DISPATCHER_PASTE = /*#__PURE__*/createNativeEventDispatcher<ClipboardEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"paste\");\nexport const EVENT_DISPATCHER_PAUSE = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"pause\");\nexport const EVENT_DISPATCHER_PLAY = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"play\");\nexport const EVENT_DISPATCHER_PLAYING = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"playing\");\nexport const EVENT_DISPATCHER_POINTER_CANCEL = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointercancel\");\nexport const EVENT_DISPATCHER_POINTER_DOWN = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointerdown\");\nexport const EVENT_DISPATCHER_POINTER_ENTER = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture, \"pointerenter\");\nexport const EVENT_DISPATCHER_POINTER_LEAVE = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture, \"pointerleave\");\nexport const EVENT_DISPATCHER_POINTER_MOVE = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointermove\");\nexport const EVENT_DISPATCHER_POINTER_OUT = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointerout\");\nexport const EVENT_DISPATCHER_POINTER_OVER = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointerover\");\nexport const EVENT_DISPATCHER_POINTER_UP = /*#__PURE__*/createNativeEventDispatcher<PointerEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"pointerup\");\nexport const EVENT_DISPATCHER_PROGRESS = /*#__PURE__*/createNativeEventDispatcher<ProgressEvent>(NativeEventSourceFlags.Capture, \"progress\");\nexport const EVENT_DISPATCHER_RATE_CHANGE = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"ratechange\");\nexport const EVENT_DISPATCHER_RESET = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"reset\");\nexport const EVENT_DISPATCHER_SCROLL = /*#__PURE__*/createNativeEventDispatcher<UIEvent>(NativeEventSourceFlags.Capture, \"scroll\");\nexport const EVENT_DISPATCHER_SEEKED = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"seeked\");\nexport const EVENT_DISPATCHER_SEEKING = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"seeking\");\nexport const EVENT_DISPATCHER_SELECT = /*#__PURE__*/createNativeEventDispatcher<UIEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"select\");\nexport const EVENT_DISPATCHER_SELECT_START = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"selectstart\");\nexport const EVENT_DISPATCHER_STALLED = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"stalled\");\nexport const EVENT_DISPATCHER_SUBMIT = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"submit\");\nexport const EVENT_DISPATCHER_SUSPEND = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"suspend\");\nexport const EVENT_DISPATCHER_TIME_UPDATE = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"timeupdate\");\nexport const EVENT_DISPATCHER_TOUCH_CANCEL = /*#__PURE__*/createNativeEventDispatcher<TouchEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"touchcancel\");\nexport const EVENT_DISPATCHER_TOUCH_END = /*#__PURE__*/createNativeEventDispatcher<TouchEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles | NativeEventSourceFlags.Passive, \"touchend\");\nexport const EVENT_DISPATCHER_TOUCH_MOVE = /*#__PURE__*/createNativeEventDispatcher<TouchEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles | NativeEventSourceFlags.Passive, \"touchmove\");\nexport const EVENT_DISPATCHER_TOUCH_START = /*#__PURE__*/createNativeEventDispatcher<TouchEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles | NativeEventSourceFlags.Passive, \"touchstart\");\nexport const EVENT_DISPATCHER_UNLOAD = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"unload\");\nexport const EVENT_DISPATCHER_VOLUME_CHANGE = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"volumechange\");\nexport const EVENT_DISPATCHER_WAITING = /*#__PURE__*/createNativeEventDispatcher<Event>(NativeEventSourceFlags.Capture, \"waiting\");\nexport const EVENT_DISPATCHER_WHEEL = /*#__PURE__*/createNativeEventDispatcher<WheelEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles | NativeEventSourceFlags.Passive, \"wheel\");\n\nexport const EVENT_DISPATCHER_ACTIVE_TOUCH_END = /*#__PURE__*/createNativeEventDispatcher<TouchEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"touchend\");\nexport const EVENT_DISPATCHER_ACTIVE_TOUCH_MOVE = /*#__PURE__*/createNativeEventDispatcher<TouchEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"touchmove\");\nexport const EVENT_DISPATCHER_ACTIVE_TOUCH_START = /*#__PURE__*/createNativeEventDispatcher<TouchEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"touchstart\");\nexport const EVENT_DISPATCHER_ACTIVE_WHEEL = /*#__PURE__*/createNativeEventDispatcher<WheelEvent>(NativeEventSourceFlags.Capture | NativeEventSourceFlags.Bubbles, \"wheel\");\n\n/**\n * Helper function that creates event handlers.\n *\n * @param src - Event source\n * @param handler - Event Handler function\n * @param capture - Capture mode\n * @returns EventHandler instance\n */\nexport function createNativeEventHandler<E extends SyntheticNativeEvent<any>>(\n  src: EventDispatcher,\n  handler: (ev: E) => EventFlags | void,\n  capture?: boolean,\n): EventHandler<E> {\n  return {\n    src,\n    flags: capture === true ? EventHandlerFlags.Capture : EventHandlerFlags.Bubble,\n    handler,\n    listeners: 0,\n    props: null,\n    state: null,\n  };\n}\n\nexport function onAbort(\n  handler: (ev: SyntheticNativeEvent<UIEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<UIEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<UIEvent>>(EVENT_DISPATCHER_ABORT.src, handler, capture);\n}\nexport function onActivate(\n  handler: (ev: SyntheticNativeEvent<UIEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<UIEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<UIEvent>>(EVENT_DISPATCHER_ACTIVATE.src, handler, capture);\n}\nexport function onAriaRequest(\n  handler: (ev: SyntheticNativeEvent<UIEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<UIEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<UIEvent>>(EVENT_DISPATCHER_ARIA_REQUEST.src, handler, capture);\n}\nexport function onBeforeActivate(\n  handler: (ev: SyntheticNativeEvent<UIEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<UIEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<UIEvent>>(EVENT_DISPATCHER_BEFORE_ACTIVATE.src, handler, capture);\n}\nexport function onBeforeCopy(\n  handler: (ev: SyntheticNativeEvent<ClipboardEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<ClipboardEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<ClipboardEvent>>(EVENT_DISPATCHER_BEFORE_COPY.src, handler, capture);\n}\nexport function onBeforeCut(\n  handler: (ev: SyntheticNativeEvent<ClipboardEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<ClipboardEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<ClipboardEvent>>(EVENT_DISPATCHER_BEFORE_CUT.src, handler, capture);\n}\nexport function onBeforeDeactivate(\n  handler: (ev: SyntheticNativeEvent<UIEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<UIEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<UIEvent>>(EVENT_DISPATCHER_BEFORE_DEACTIVATE.src, handler, capture);\n}\nexport function onBeforePaste(\n  handler: (ev: SyntheticNativeEvent<ClipboardEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<ClipboardEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<ClipboardEvent>>(EVENT_DISPATCHER_BEFORE_PASTE.src, handler, capture);\n}\nexport function onBlur(\n  handler: (ev: SyntheticNativeEvent<FocusEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<FocusEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<FocusEvent>>(EVENT_DISPATCHER_BLUR.src, handler, capture);\n}\nexport function onCanPlay(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_CAN_PLAY.src, handler, capture);\n}\nexport function onCanPlaythrough(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_CAN_PLAYTHROUGH.src, handler, capture);\n}\nexport function onChange(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_CHANGE.src, handler, capture);\n}\nexport function onClick(\n  handler: (ev: SyntheticNativeEvent<MouseEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MouseEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MouseEvent>>(EVENT_DISPATCHER_CLICK.src, handler, capture);\n}\nexport function onContextMenu(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_CONTEXT_MENU.src, handler, capture);\n}\nexport function onCopy(\n  handler: (ev: SyntheticNativeEvent<ClipboardEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<ClipboardEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<ClipboardEvent>>(EVENT_DISPATCHER_COPY.src, handler, capture);\n}\nexport function onCueChange(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_CUE_CHANGE.src, handler, capture);\n}\nexport function onCut(\n  handler: (ev: SyntheticNativeEvent<ClipboardEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<ClipboardEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<ClipboardEvent>>(EVENT_DISPATCHER_CUT.src, handler, capture);\n}\nexport function onDoubleClick(\n  handler: (ev: SyntheticNativeEvent<MouseEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MouseEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MouseEvent>>(EVENT_DISPATCHER_DOUBLE_CLICK.src, handler, capture);\n}\nexport function onDeactivate(\n  handler: (ev: SyntheticNativeEvent<UIEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<UIEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<UIEvent>>(EVENT_DISPATCHER_DEACTIVATE.src, handler, capture);\n}\nexport function onDrag(\n  handler: (ev: SyntheticNativeEvent<DragEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<DragEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<DragEvent>>(EVENT_DISPATCHER_DRAG.src, handler, capture);\n}\nexport function onDragEnd(\n  handler: (ev: SyntheticNativeEvent<DragEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<DragEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<DragEvent>>(EVENT_DISPATCHER_DRAG_END.src, handler, capture);\n}\nexport function onDragEnter(\n  handler: (ev: SyntheticNativeEvent<DragEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<DragEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<DragEvent>>(EVENT_DISPATCHER_DRAG_ENTER.src, handler, capture);\n}\nexport function onDragLeave(\n  handler: (ev: SyntheticNativeEvent<DragEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<DragEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<DragEvent>>(EVENT_DISPATCHER_DRAG_LEAVE.src, handler, capture);\n}\nexport function onDragOver(\n  handler: (ev: SyntheticNativeEvent<DragEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<DragEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<DragEvent>>(EVENT_DISPATCHER_DRAG_OVER.src, handler, capture);\n}\nexport function onDragStart(\n  handler: (ev: SyntheticNativeEvent<DragEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<DragEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<DragEvent>>(EVENT_DISPATCHER_DRAG_START.src, handler, capture);\n}\nexport function onDrop(\n  handler: (ev: SyntheticNativeEvent<DragEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<DragEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<DragEvent>>(EVENT_DISPATCHER_DROP.src, handler, capture);\n}\nexport function onDurationChange(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_DURATION_CHANGE.src, handler, capture);\n}\nexport function onEmptied(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_EMPTIED.src, handler, capture);\n}\nexport function onEncrypted(\n  handler: (ev: SyntheticNativeEvent<MediaEncryptedEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MediaEncryptedEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MediaEncryptedEvent>>(EVENT_DISPATCHER_ENCRYPTED.src, handler, capture);\n}\nexport function onEnded(\n  handler: (ev: SyntheticNativeEvent<MediaStreamErrorEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MediaStreamErrorEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MediaStreamErrorEvent>>(EVENT_DISPATCHER_ENDED.src, handler, capture);\n}\nexport function onError(\n  handler: (ev: SyntheticNativeEvent<ErrorEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<ErrorEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<ErrorEvent>>(EVENT_DISPATCHER_ERROR.src, handler, capture);\n}\nexport function onFocus(\n  handler: (ev: SyntheticNativeEvent<FocusEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<FocusEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<FocusEvent>>(EVENT_DISPATCHER_FOCUS.src, handler, capture);\n}\nexport function onGotPointerCapture(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_GOT_POINTER_CAPTURE.src, handler, capture);\n}\nexport function onInput(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_INPUT.src, handler, capture);\n}\nexport function onInvalid(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_INVALID.src, handler, capture);\n}\nexport function onKeyDown(\n  handler: (ev: SyntheticNativeEvent<KeyboardEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<KeyboardEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<KeyboardEvent>>(EVENT_DISPATCHER_KEY_DOWN.src, handler, capture);\n}\nexport function onKeyPress(\n  handler: (ev: SyntheticNativeEvent<KeyboardEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<KeyboardEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<KeyboardEvent>>(EVENT_DISPATCHER_KEY_PRESS.src, handler, capture);\n}\nexport function onKeyUp(\n  handler: (ev: SyntheticNativeEvent<KeyboardEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<KeyboardEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<KeyboardEvent>>(EVENT_DISPATCHER_KEY_UP.src, handler, capture);\n}\nexport function onLoad(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_LOAD.src, handler, capture);\n}\nexport function onLoadedData(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_LOADED_DATA.src, handler, capture);\n}\nexport function onLoadedMetadata(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_LOADED_METADATA.src, handler, capture);\n}\nexport function onLoadStart(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_LOAD_START.src, handler, capture);\n}\nexport function onLostPointerCapture(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_LOST_POINTER_CAPTURE.src, handler, capture);\n}\nexport function onMouseDown(\n  handler: (ev: SyntheticNativeEvent<MouseEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MouseEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MouseEvent>>(EVENT_DISPATCHER_MOUSE_DOWN.src, handler, capture);\n}\nexport function onMouseEnter(\n  handler: (ev: SyntheticNativeEvent<MouseEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MouseEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MouseEvent>>(EVENT_DISPATCHER_MOUSE_ENTER.src, handler, capture);\n}\nexport function onMouseLeave(\n  handler: (ev: SyntheticNativeEvent<MouseEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MouseEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MouseEvent>>(EVENT_DISPATCHER_MOUSE_LEAVE.src, handler, capture);\n}\nexport function onMouseMove(\n  handler: (ev: SyntheticNativeEvent<MouseEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MouseEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MouseEvent>>(EVENT_DISPATCHER_MOUSE_MOVE.src, handler, capture);\n}\nexport function onMouseOut(\n  handler: (ev: SyntheticNativeEvent<MouseEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MouseEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MouseEvent>>(EVENT_DISPATCHER_MOUSE_OUT.src, handler, capture);\n}\nexport function onMouseOver(\n  handler: (ev: SyntheticNativeEvent<MouseEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MouseEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MouseEvent>>(EVENT_DISPATCHER_MOUSE_OVER.src, handler, capture);\n}\nexport function onMouseUp(\n  handler: (ev: SyntheticNativeEvent<MouseEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<MouseEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<MouseEvent>>(EVENT_DISPATCHER_MOUSE_UP.src, handler, capture);\n}\nexport function onPaste(\n  handler: (ev: SyntheticNativeEvent<ClipboardEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<ClipboardEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<ClipboardEvent>>(EVENT_DISPATCHER_PASTE.src, handler, capture);\n}\nexport function onPause(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_PAUSE.src, handler, capture);\n}\nexport function onPlay(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_PLAY.src, handler, capture);\n}\nexport function onPlaying(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_PLAYING.src, handler, capture);\n}\nexport function onPointerCancel(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_POINTER_CANCEL.src, handler, capture);\n}\nexport function onPointerDown(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_POINTER_DOWN.src, handler, capture);\n}\nexport function onPointerEnter(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_POINTER_ENTER.src, handler, capture);\n}\nexport function onPointerLeave(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_POINTER_LEAVE.src, handler, capture);\n}\nexport function onPointerMove(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_POINTER_MOVE.src, handler, capture);\n}\nexport function onPointerOut(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_POINTER_OUT.src, handler, capture);\n}\nexport function onPointerOver(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_POINTER_OVER.src, handler, capture);\n}\nexport function onPointerUp(\n  handler: (ev: SyntheticNativeEvent<PointerEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<PointerEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<PointerEvent>>(EVENT_DISPATCHER_POINTER_UP.src, handler, capture);\n}\nexport function onProgress(\n  handler: (ev: SyntheticNativeEvent<ProgressEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<ProgressEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<ProgressEvent>>(EVENT_DISPATCHER_PROGRESS.src, handler, capture);\n}\nexport function onRateChange(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_RATE_CHANGE.src, handler, capture);\n}\nexport function onReset(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_RESET.src, handler, capture);\n}\nexport function onScroll(\n  handler: (ev: SyntheticNativeEvent<UIEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<UIEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<UIEvent>>(EVENT_DISPATCHER_SCROLL.src, handler, capture);\n}\nexport function onSeeked(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_SEEKED.src, handler, capture);\n}\nexport function onSeeking(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_SEEKING.src, handler, capture);\n}\nexport function onSelect(\n  handler: (ev: SyntheticNativeEvent<UIEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<UIEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<UIEvent>>(EVENT_DISPATCHER_SELECT.src, handler, capture);\n}\nexport function onSelectStart(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_SELECT_START.src, handler, capture);\n}\nexport function onStalled(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_STALLED.src, handler, capture);\n}\nexport function onSubmit(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_SUBMIT.src, handler, capture);\n}\nexport function onSuspend(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_SUSPEND.src, handler, capture);\n}\nexport function onTimeUpdate(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_TIME_UPDATE.src, handler, capture);\n}\nexport function onTouchCancel(\n  handler: (ev: SyntheticNativeEvent<TouchEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<TouchEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<TouchEvent>>(EVENT_DISPATCHER_TOUCH_CANCEL.src, handler, capture);\n}\nexport function onTouchEnd(\n  handler: (ev: SyntheticNativeEvent<TouchEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<TouchEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<TouchEvent>>(EVENT_DISPATCHER_TOUCH_END.src, handler, capture);\n}\nexport function onTouchMove(\n  handler: (ev: SyntheticNativeEvent<TouchEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<TouchEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<TouchEvent>>(EVENT_DISPATCHER_TOUCH_MOVE.src, handler, capture);\n}\nexport function onTouchStart(\n  handler: (ev: SyntheticNativeEvent<TouchEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<TouchEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<TouchEvent>>(EVENT_DISPATCHER_TOUCH_START.src, handler, capture);\n}\nexport function onUnload(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_UNLOAD.src, handler, capture);\n}\nexport function onVolumeChange(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_VOLUME_CHANGE.src, handler, capture);\n}\nexport function onWaiting(\n  handler: (ev: SyntheticNativeEvent<Event>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<Event>> {\n  return createNativeEventHandler<SyntheticNativeEvent<Event>>(EVENT_DISPATCHER_WAITING.src, handler, capture);\n}\nexport function onWheel(\n  handler: (ev: SyntheticNativeEvent<WheelEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<WheelEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<WheelEvent>>(EVENT_DISPATCHER_WHEEL.src, handler, capture);\n}\n\nexport function onActiveTouchEnd(\n  handler: (ev: SyntheticNativeEvent<TouchEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<TouchEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<TouchEvent>>(EVENT_DISPATCHER_ACTIVE_TOUCH_END.src, handler, capture);\n}\nexport function onActiveTouchMove(\n  handler: (ev: SyntheticNativeEvent<TouchEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<TouchEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<TouchEvent>>(EVENT_DISPATCHER_ACTIVE_TOUCH_MOVE.src, handler, capture);\n}\nexport function onActiveTouchStart(\n  handler: (ev: SyntheticNativeEvent<TouchEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<TouchEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<TouchEvent>>(EVENT_DISPATCHER_ACTIVE_TOUCH_START.src, handler, capture);\n}\nexport function onActiveWheel(\n  handler: (ev: SyntheticNativeEvent<WheelEvent>) => EventFlags | void,\n  capture = false,\n): EventHandler<SyntheticNativeEvent<WheelEvent>> {\n  return createNativeEventHandler<SyntheticNativeEvent<WheelEvent>>(EVENT_DISPATCHER_ACTIVE_WHEEL.src, handler, capture);\n}\n\n/* tslint:enable:max-line-length */\n","import { currentFrameUpdate } from \"ivi-scheduler\";\nimport { ComponentFlags } from \"./flags\";\nimport { VNode } from \"./vnode\";\n\n/**\n * Stateless Component descriptor.\n */\nexport interface StatelessComponent<P = undefined> {\n  render: (props: P) => VNode;\n  shouldUpdate: ((oldProps: P, newProps: P) => boolean) | null;\n}\n\n/**\n * Stateful Component class interface.\n */\nexport interface StatefulComponent<P = undefined> {\n  new(props: P): Component<P>;\n}\n\n/**\n * Base class for stateful components.\n *\n * Component class has a parametric type `P` to specify `props` type.\n *\n * @example\n *\n *     const Hello = statefulComponent(class extends Component<string> {\n *       render() {\n *         return div().c(`Hello ${this.props}`);\n *       }\n *     });\n *\n *     render(\n *       Hello(\"World!\"),\n *       document.getElementById(\"app\")!,\n *     );\n */\nexport abstract class Component<P = undefined> {\n  /**\n   * Flags, see {@link ComponentFlags} for details.\n   */\n  flags: ComponentFlags;\n  /**\n   * Component properties.\n   */\n  props: P;\n\n  /**\n   * Component constructor.\n   *\n   * Components are instantiated by a virtual DOM engine.\n   *\n   * @param props - Properties\n   */\n  constructor(props: P) {\n    this.flags = 0;\n    this.props = props;\n  }\n\n  /**\n   * Lifecycle method `newPropsReceived()` is invoked after new props are assigned.\n   *\n   * @param prev - Previous properties\n   * @param next - Next properties\n   */\n  newPropsReceived(prev: P, next: P): void {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n  }\n\n  /**\n   * Lifecycle method `attached()` is invoked when component is attached to the document.\n   */\n  attached(): void {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n  }\n\n  /**\n   * Lifecycle method `detached()` is invoked when component is detached from the document.\n   */\n  detached(): void {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n  }\n\n  /**\n   * Lifecycle method `shouldUpdate()` is used as a hint to reduce unnecessary updates.\n   *\n   * @param prev - Previous properties\n   * @param next - Next properties\n   * @returns `true` when changes in props should trigger update\n   */\n  shouldUpdate(prev: P, next: P): boolean {\n    return prev !== next;\n  }\n\n  /**\n   * Lifecycle method `updated()` is invoked after update.\n   *\n   * @param local - Update were triggered from local changes\n   */\n  updated(local: boolean): void {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n  }\n\n  /**\n   * Lifecycle method `invalidated()` is invoked after `invalidate()` method is invoked.\n   */\n  invalidated(): void {\n    /* tslint:disable:no-empty */\n    /* tslint:enable:no-empty */\n  }\n\n  /**\n   * Lifecycle method `render()` should return virtual DOM representation.\n   *\n   * @returns Virtual DOM representation\n   */\n  abstract render(): VNode;\n\n  /**\n   * Triggers view invalidation.\n   */\n  invalidate(): void {\n    this.flags |= ComponentFlags.DirtyState;\n    this.invalidated();\n    if ((this.flags & ComponentFlags.Detached) === 0) {\n      currentFrameUpdate();\n    }\n  }\n}\n\n/**\n * `isComponentAttached()` returns `true` when component is attached.\n *\n * @returns `true` when component is attached.\n */\nexport function isComponentAttached(component: Component<any>): boolean {\n  return (component.flags & ComponentFlags.Detached) === 0;\n}\n","import {\n  HTMLAnchorElementProps, HTMLElementProps, HTMLAreaElementProps, HTMLAudioElementProps,\n  HTMLBaseElementProps, HTMLBaseFontElementProps, HTMLBodyElementProps, HTMLBRElementProps, HTMLButtonElementProps,\n  HTMLCanvasElementProps, HTMLQuoteElementProps, HTMLTableCaptionElementProps, HTMLTableColElementProps,\n  HTMLDataListElementProps, HTMLModElementProps, HTMLDirectoryElementProps, HTMLDivElementProps,\n  HTMLDListElementProps, HTMLEmbedElementProps, HTMLFieldSetElementProps, HTMLFontElementProps, HTMLFormElementProps,\n  HTMLFrameElementProps, HTMLFrameSetElementProps, HTMLHeadElementProps, HTMLHeadingElementProps, HTMLHRElementProps,\n  HTMLHtmlElementProps, HTMLIFrameElementProps, HTMLImageElementProps, HTMLInputElementProps, HTMLLabelElementProps,\n  HTMLLegendElementProps, HTMLLIElementProps, HTMLLinkElementProps, HTMLMapElementProps,\n  HTMLMenuElementProps, HTMLMetaElementProps, HTMLMeterElementProps, HTMLObjectElementProps, HTMLOListElementProps,\n  HTMLOptGroupElementProps, HTMLOptionElementProps, HTMLParagraphElementProps, HTMLParamElementProps,\n  HTMLPictureElementProps, HTMLPreElementProps, HTMLProgressElementProps, HTMLScriptElementProps,\n  HTMLSelectElementProps, HTMLSourceElementProps, HTMLSpanElementProps, HTMLStyleElementProps,\n  HTMLTableDataCellElementProps, HTMLTableElementProps, HTMLTableHeaderCellElementProps, HTMLTableRowElementProps,\n  HTMLTableSectionElementProps, HTMLTemplateElementProps, HTMLTextAreaElementProps, HTMLTitleElementProps,\n  HTMLTrackElementProps, HTMLUListElementProps, HTMLVideoElementProps,\n} from \"ivi-core\";\nimport { VNode, VNodeFlags } from \"ivi\";\n\nconst enum TagId {\n  A = 1,\n  Abbr = 2,\n  Acronym = 3,\n  Address = 4,\n  Area = 5,\n  Article = 6,\n  Aside = 7,\n  B = 8,\n  Base = 9,\n  Basefont = 10,\n  Bdo = 11,\n  Big = 12,\n  Blockquote = 13,\n  Body = 14,\n  Br = 15,\n  Button = 16,\n  Canvas = 17,\n  Caption = 18,\n  Center = 19,\n  Cite = 20,\n  Code = 21,\n  Col = 22,\n  Colgroup = 23,\n  Data = 24,\n  Datalist = 25,\n  Dd = 26,\n  Del = 27,\n  Dfn = 28,\n  Dir = 29,\n  Div = 30,\n  Dl = 31,\n  Dt = 32,\n  Em = 33,\n  Embed = 34,\n  Fieldset = 35,\n  Figcaption = 36,\n  Figure = 37,\n  Font = 38,\n  Footer = 39,\n  Form = 40,\n  Frame = 41,\n  Frameset = 42,\n  H1 = 43,\n  H2 = 44,\n  H3 = 45,\n  H4 = 46,\n  H5 = 47,\n  H6 = 48,\n  Head = 49,\n  Header = 50,\n  Hgroup = 51,\n  Hr = 52,\n  Html = 53,\n  I = 54,\n  Iframe = 55,\n  Img = 56,\n  Input = 57,\n  Ins = 58,\n  Kbd = 59,\n  Label = 60,\n  Legend = 61,\n  Li = 62,\n  Link = 63,\n  Listing = 64,\n  Main = 65,\n  Map = 66,\n  Mark = 67,\n  Menu = 68,\n  Meta = 69,\n  Meter = 70,\n  Nav = 71,\n  Nobr = 72,\n  Noframes = 73,\n  Noscript = 74,\n  Object = 75,\n  Ol = 76,\n  Optgroup = 77,\n  Option = 78,\n  P = 79,\n  Param = 80,\n  Picture = 81,\n  Plaintext = 82,\n  Pre = 83,\n  Progress = 84,\n  Q = 85,\n  Rt = 86,\n  Ruby = 87,\n  S = 88,\n  Samp = 89,\n  Script = 90,\n  Section = 91,\n  Select = 92,\n  Small = 93,\n  Source = 94,\n  Span = 95,\n  Strike = 96,\n  Strong = 97,\n  Style = 98,\n  Sub = 99,\n  Sup = 100,\n  Table = 101,\n  Tbody = 102,\n  Td = 103,\n  Template = 104,\n  Textarea = 105,\n  Tfoot = 106,\n  Th = 107,\n  Thead = 108,\n  Time = 109,\n  Title = 110,\n  Tr = 111,\n  Track = 112,\n  Tt = 113,\n  U = 114,\n  Ul = 115,\n  Wbr = 116,\n  Xmp = 117,\n  Audio = 118,\n  Video = 119,\n}\n\n/**\n * Create a VNode representing a Text node.\n *\n * @param content Text content.\n * @returns VNode object.\n */\nexport function t(content: string | number | null): VNode<null, Text> {\n  return new VNode(VNodeFlags.Text, null, null, void 0, content);\n}\n\n// HTML Elements:\nexport function a(className?: string): VNode<HTMLAnchorElementProps | null, HTMLAnchorElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.A << VNodeFlags.ElementIdOffset),\n    \"a\",\n    null,\n    className,\n    null,\n  );\n}\nexport function abbr(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Abbr << VNodeFlags.ElementIdOffset),\n    \"abbr\",\n    null,\n    className,\n    null,\n  );\n}\nexport function acronym(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Acronym << VNodeFlags.ElementIdOffset),\n    \"acronym\",\n    null,\n    className,\n    null,\n  );\n}\nexport function address(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Address << VNodeFlags.ElementIdOffset),\n    \"address\",\n    null,\n    className,\n    null,\n  );\n}\nexport function area(className?: string): VNode<HTMLAreaElementProps | null, HTMLAreaElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Area << VNodeFlags.ElementIdOffset),\n    \"area\",\n    null,\n    className,\n    null,\n  );\n}\nexport function article(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Article << VNodeFlags.ElementIdOffset),\n    \"article\",\n    null,\n    className,\n    null,\n  );\n}\nexport function aside(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Aside << VNodeFlags.ElementIdOffset),\n    \"aside\",\n    null,\n    className,\n    null,\n  );\n}\nexport function b(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.B << VNodeFlags.ElementIdOffset),\n    \"b\",\n    null,\n    className,\n    null,\n  );\n}\nexport function base(className?: string): VNode<HTMLBaseElementProps | null, HTMLBaseElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Base << VNodeFlags.ElementIdOffset),\n    \"base\",\n    null,\n    className,\n    null,\n  );\n}\nexport function basefont(className?: string): VNode<HTMLBaseFontElementProps | null, HTMLBaseFontElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Basefont << VNodeFlags.ElementIdOffset),\n    \"basefont\",\n    null,\n    className,\n    null,\n  );\n}\nexport function bdo(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Bdo << VNodeFlags.ElementIdOffset),\n    \"bdo\",\n    null,\n    className,\n    null,\n  );\n}\nexport function big(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Big << VNodeFlags.ElementIdOffset),\n    \"big\",\n    null,\n    className,\n    null,\n  );\n}\nexport function blockquote(className?: string): VNode<HTMLQuoteElementProps | null, HTMLQuoteElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Blockquote << VNodeFlags.ElementIdOffset),\n    \"blockquote\",\n    null,\n    className,\n    null,\n  );\n}\nexport function body(className?: string): VNode<HTMLBodyElementProps | null, HTMLBodyElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Body << VNodeFlags.ElementIdOffset),\n    \"body\",\n    null,\n    className,\n    null,\n  );\n}\nexport function br(className?: string): VNode<HTMLBRElementProps | null, HTMLBRElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Br << VNodeFlags.ElementIdOffset),\n    \"br\",\n    null,\n    className,\n    null,\n  );\n}\nexport function button(className?: string): VNode<HTMLButtonElementProps | null, HTMLButtonElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Button << VNodeFlags.ElementIdOffset),\n    \"button\",\n    null,\n    className,\n    null,\n  );\n}\nexport function canvas(className?: string): VNode<HTMLCanvasElementProps | null, HTMLCanvasElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Canvas << VNodeFlags.ElementIdOffset),\n    \"canvas\",\n    null,\n    className,\n    null,\n  );\n}\nexport function caption(className?: string): VNode<HTMLTableCaptionElementProps | null, HTMLTableCaptionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Caption << VNodeFlags.ElementIdOffset),\n    \"caption\",\n    null,\n    className,\n    null,\n  );\n}\nexport function center(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Center << VNodeFlags.ElementIdOffset),\n    \"center\",\n    null,\n    className,\n    null,\n  );\n}\nexport function cite(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Cite << VNodeFlags.ElementIdOffset),\n    \"cite\",\n    null,\n    className,\n    null,\n  );\n}\nexport function code(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Code << VNodeFlags.ElementIdOffset),\n    \"code\",\n    null,\n    className,\n    null,\n  );\n}\nexport function col(className?: string): VNode<HTMLTableColElementProps | null, HTMLTableColElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Col << VNodeFlags.ElementIdOffset),\n    \"col\",\n    null,\n    className,\n    null,\n  );\n}\nexport function colgroup(className?: string): VNode<HTMLTableColElementProps | null, HTMLTableColElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Colgroup << VNodeFlags.ElementIdOffset),\n    \"colgroup\",\n    null,\n    className,\n    null,\n  );\n}\nexport function data(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Data << VNodeFlags.ElementIdOffset),\n    \"data\",\n    null,\n    className,\n    null,\n  );\n}\nexport function datalist(className?: string): VNode<HTMLDataListElementProps | null, HTMLDataListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Datalist << VNodeFlags.ElementIdOffset),\n    \"datalist\",\n    null,\n    className,\n    null,\n  );\n}\nexport function dd(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dd << VNodeFlags.ElementIdOffset),\n    \"dd\",\n    null,\n    className,\n    null,\n  );\n}\nexport function del(className?: string): VNode<HTMLModElementProps | null, HTMLModElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Del << VNodeFlags.ElementIdOffset),\n    \"del\",\n    null,\n    className,\n    null,\n  );\n}\nexport function dfn(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dfn << VNodeFlags.ElementIdOffset),\n    \"dfn\",\n    null,\n    className,\n    null,\n  );\n}\nexport function dir(className?: string): VNode<HTMLDirectoryElementProps | null, HTMLDirectoryElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dir << VNodeFlags.ElementIdOffset),\n    \"dir\",\n    null,\n    className,\n    null,\n  );\n}\nexport function div(className?: string): VNode<HTMLDivElementProps | null, HTMLDivElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Div << VNodeFlags.ElementIdOffset),\n    \"div\",\n    null,\n    className,\n    null,\n  );\n}\nexport function dl(className?: string): VNode<HTMLDListElementProps | null, HTMLDListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dl << VNodeFlags.ElementIdOffset),\n    \"dl\",\n    null,\n    className,\n    null,\n  );\n}\nexport function dt(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Dt << VNodeFlags.ElementIdOffset),\n    \"dt\",\n    null,\n    className,\n    null,\n  );\n}\nexport function em(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Em << VNodeFlags.ElementIdOffset),\n    \"em\",\n    null,\n    className,\n    null,\n  );\n}\nexport function embed(className?: string): VNode<HTMLEmbedElementProps | null, HTMLEmbedElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Embed << VNodeFlags.ElementIdOffset),\n    \"embed\",\n    null,\n    className,\n    null,\n  );\n}\nexport function fieldset(className?: string): VNode<HTMLFieldSetElementProps | null, HTMLFieldSetElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Fieldset << VNodeFlags.ElementIdOffset),\n    \"fieldset\",\n    null,\n    className,\n    null,\n  );\n}\nexport function figcaption(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Figcaption << VNodeFlags.ElementIdOffset),\n    \"figcaption\",\n    null,\n    className,\n    null,\n  );\n}\nexport function figure(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Figure << VNodeFlags.ElementIdOffset),\n    \"figure\",\n    null,\n    className,\n    null,\n  );\n}\nexport function font(className?: string): VNode<HTMLFontElementProps | null, HTMLFontElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Font << VNodeFlags.ElementIdOffset),\n    \"font\",\n    null,\n    className,\n    null,\n  );\n}\nexport function footer(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Footer << VNodeFlags.ElementIdOffset),\n    \"footer\",\n    null,\n    className,\n    null,\n  );\n}\nexport function form(className?: string): VNode<HTMLFormElementProps | null, HTMLFormElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Form << VNodeFlags.ElementIdOffset),\n    \"form\",\n    null,\n    className,\n    null,\n  );\n}\nexport function frame(className?: string): VNode<HTMLFrameElementProps | null, HTMLFrameElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Frame << VNodeFlags.ElementIdOffset),\n    \"frame\",\n    null,\n    className,\n    null,\n  );\n}\nexport function frameset(className?: string): VNode<HTMLFrameSetElementProps | null, HTMLFrameSetElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Frameset << VNodeFlags.ElementIdOffset),\n    \"frameset\",\n    null,\n    className,\n    null,\n  );\n}\nexport function h1(className?: string): VNode<HTMLHeadingElementProps | null, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H1 << VNodeFlags.ElementIdOffset),\n    \"h1\",\n    null,\n    className,\n    null,\n  );\n}\nexport function h2(className?: string): VNode<HTMLHeadingElementProps | null, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H2 << VNodeFlags.ElementIdOffset),\n    \"h2\",\n    null,\n    className,\n    null,\n  );\n}\nexport function h3(className?: string): VNode<HTMLHeadingElementProps | null, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H3 << VNodeFlags.ElementIdOffset),\n    \"h3\",\n    null,\n    className,\n    null,\n  );\n}\nexport function h4(className?: string): VNode<HTMLHeadingElementProps | null, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H4 << VNodeFlags.ElementIdOffset),\n    \"h4\",\n    null,\n    className,\n    null,\n  );\n}\nexport function h5(className?: string): VNode<HTMLHeadingElementProps | null, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H5 << VNodeFlags.ElementIdOffset),\n    \"h5\",\n    null,\n    className,\n    null,\n  );\n}\nexport function h6(className?: string): VNode<HTMLHeadingElementProps | null, HTMLHeadingElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.H6 << VNodeFlags.ElementIdOffset),\n    \"h6\",\n    null,\n    className,\n    null,\n  );\n}\nexport function head(className?: string): VNode<HTMLHeadElementProps | null, HTMLHeadElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Head << VNodeFlags.ElementIdOffset),\n    \"head\",\n    null,\n    className,\n    null,\n  );\n}\nexport function header(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Header << VNodeFlags.ElementIdOffset),\n    \"header\",\n    null,\n    className,\n    null,\n  );\n}\nexport function hgroup(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Hgroup << VNodeFlags.ElementIdOffset),\n    \"hgroup\",\n    null,\n    className,\n    null,\n  );\n}\nexport function hr(className?: string): VNode<HTMLHRElementProps | null, HTMLHRElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Hr << VNodeFlags.ElementIdOffset),\n    \"hr\",\n    null,\n    className,\n    null,\n  );\n}\nexport function html(className?: string): VNode<HTMLHtmlElementProps | null, HTMLHtmlElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Html << VNodeFlags.ElementIdOffset),\n    \"html\",\n    null,\n    className,\n    null,\n  );\n}\nexport function i(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.I << VNodeFlags.ElementIdOffset),\n    \"i\",\n    null,\n    className,\n    null,\n  );\n}\nexport function iframe(className?: string): VNode<HTMLIFrameElementProps | null, HTMLIFrameElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Iframe << VNodeFlags.ElementIdOffset),\n    \"iframe\",\n    null,\n    className,\n    null,\n  );\n}\nexport function img(className?: string): VNode<HTMLImageElementProps | null, HTMLImageElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Img << VNodeFlags.ElementIdOffset),\n    \"img\",\n    null,\n    className,\n    null,\n  );\n}\nexport function ins(className?: string): VNode<HTMLModElementProps | null, HTMLModElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ins << VNodeFlags.ElementIdOffset),\n    \"ins\",\n    null,\n    className,\n    null,\n  );\n}\nexport function kbd(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Kbd << VNodeFlags.ElementIdOffset),\n    \"kbd\",\n    null,\n    className,\n    null,\n  );\n}\nexport function label(className?: string): VNode<HTMLLabelElementProps | null, HTMLLabelElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Label << VNodeFlags.ElementIdOffset),\n    \"label\",\n    null,\n    className,\n    null,\n  );\n}\nexport function legend(className?: string): VNode<HTMLLegendElementProps | null, HTMLLegendElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Legend << VNodeFlags.ElementIdOffset),\n    \"legend\",\n    null,\n    className,\n    null,\n  );\n}\nexport function li(className?: string): VNode<HTMLLIElementProps | null, HTMLLIElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Li << VNodeFlags.ElementIdOffset),\n    \"li\",\n    null,\n    className,\n    null,\n  );\n}\nexport function link(className?: string): VNode<HTMLLinkElementProps | null, HTMLLinkElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Link << VNodeFlags.ElementIdOffset),\n    \"link\",\n    null,\n    className,\n    null,\n  );\n}\nexport function listing(className?: string): VNode<HTMLPreElementProps | null, HTMLPreElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Listing << VNodeFlags.ElementIdOffset),\n    \"listing\",\n    null,\n    className,\n    null,\n  );\n}\nexport function main(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Main << VNodeFlags.ElementIdOffset),\n    \"main\",\n    null,\n    className,\n    null,\n  );\n}\nexport function map(className?: string): VNode<HTMLMapElementProps | null, HTMLMapElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Map << VNodeFlags.ElementIdOffset),\n    \"map\",\n    null,\n    className,\n    null,\n  );\n}\nexport function mark(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Mark << VNodeFlags.ElementIdOffset),\n    \"mark\",\n    null,\n    className,\n    null,\n  );\n}\nexport function menu(className?: string): VNode<HTMLMenuElementProps | null, HTMLMenuElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Menu << VNodeFlags.ElementIdOffset),\n    \"menu\",\n    null,\n    className,\n    null,\n  );\n}\nexport function meta(className?: string): VNode<HTMLMetaElementProps | null, HTMLMetaElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Meta << VNodeFlags.ElementIdOffset),\n    \"meta\",\n    null,\n    className,\n    null,\n  );\n}\nexport function meter(className?: string): VNode<HTMLMeterElementProps | null, HTMLMeterElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Meter << VNodeFlags.ElementIdOffset),\n    \"meter\",\n    null,\n    className,\n    null,\n  );\n}\nexport function nav(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Nav << VNodeFlags.ElementIdOffset),\n    \"nav\",\n    null,\n    className,\n    null,\n  );\n}\nexport function nobr(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Nobr << VNodeFlags.ElementIdOffset),\n    \"nobr\",\n    null,\n    className,\n    null,\n  );\n}\nexport function noframes(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Noframes << VNodeFlags.ElementIdOffset),\n    \"noframes\",\n    null,\n    className,\n    null,\n  );\n}\nexport function noscript(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Noscript << VNodeFlags.ElementIdOffset),\n    \"noscript\",\n    null,\n    className,\n    null,\n  );\n}\nexport function object(className?: string): VNode<HTMLObjectElementProps | null, HTMLObjectElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Object << VNodeFlags.ElementIdOffset),\n    \"object\",\n    null,\n    className,\n    null,\n  );\n}\nexport function ol(className?: string): VNode<HTMLOListElementProps | null, HTMLOListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ol << VNodeFlags.ElementIdOffset),\n    \"ol\",\n    null,\n    className,\n    null,\n  );\n}\nexport function optgroup(className?: string): VNode<HTMLOptGroupElementProps | null, HTMLOptGroupElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Optgroup << VNodeFlags.ElementIdOffset),\n    \"optgroup\",\n    null,\n    className,\n    null,\n  );\n}\nexport function option(className?: string): VNode<HTMLOptionElementProps | null, HTMLOptionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Option << VNodeFlags.ElementIdOffset),\n    \"option\",\n    null,\n    className,\n    null,\n  );\n}\nexport function p(className?: string): VNode<HTMLParagraphElementProps | null, HTMLParagraphElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.P << VNodeFlags.ElementIdOffset),\n    \"p\",\n    null,\n    className,\n    null,\n  );\n}\nexport function param(className?: string): VNode<HTMLParamElementProps | null, HTMLParamElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Param << VNodeFlags.ElementIdOffset),\n    \"param\",\n    null,\n    className,\n    null,\n  );\n}\nexport function picture(className?: string): VNode<HTMLPictureElementProps | null, HTMLPictureElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Picture << VNodeFlags.ElementIdOffset),\n    \"picture\",\n    null,\n    className,\n    null,\n  );\n}\nexport function plaintext(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Plaintext << VNodeFlags.ElementIdOffset),\n    \"plaintext\",\n    null,\n    className,\n    null,\n  );\n}\nexport function pre(className?: string): VNode<HTMLPreElementProps | null, HTMLPreElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Pre << VNodeFlags.ElementIdOffset),\n    \"pre\",\n    null,\n    className,\n    null,\n  );\n}\nexport function progress(className?: string): VNode<HTMLProgressElementProps | null, HTMLProgressElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Progress << VNodeFlags.ElementIdOffset),\n    \"progress\",\n    null,\n    className,\n    null,\n  );\n}\nexport function q(className?: string): VNode<HTMLQuoteElementProps | null, HTMLQuoteElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Q << VNodeFlags.ElementIdOffset),\n    \"q\",\n    null,\n    className,\n    null,\n  );\n}\nexport function rt(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Rt << VNodeFlags.ElementIdOffset),\n    \"rt\",\n    null,\n    className,\n    null,\n  );\n}\nexport function ruby(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ruby << VNodeFlags.ElementIdOffset),\n    \"ruby\",\n    null,\n    className,\n    null,\n  );\n}\nexport function s(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.S << VNodeFlags.ElementIdOffset),\n    \"s\",\n    null,\n    className,\n    null,\n  );\n}\nexport function samp(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Samp << VNodeFlags.ElementIdOffset),\n    \"samp\",\n    null,\n    className,\n    null,\n  );\n}\nexport function script(className?: string): VNode<HTMLScriptElementProps | null, HTMLScriptElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Script << VNodeFlags.ElementIdOffset),\n    \"script\",\n    null,\n    className,\n    null,\n  );\n}\nexport function section(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Section << VNodeFlags.ElementIdOffset),\n    \"section\",\n    null,\n    className,\n    null,\n  );\n}\nexport function select(className?: string): VNode<HTMLSelectElementProps | null, HTMLSelectElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Select << VNodeFlags.ElementIdOffset),\n    \"select\",\n    null,\n    className,\n    null,\n  );\n}\nexport function small(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Small << VNodeFlags.ElementIdOffset),\n    \"small\",\n    null,\n    className,\n    null,\n  );\n}\nexport function source(className?: string): VNode<HTMLSourceElementProps | null, HTMLSourceElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Source << VNodeFlags.ElementIdOffset),\n    \"source\",\n    null,\n    className,\n    null,\n  );\n}\nexport function span(className?: string): VNode<HTMLSpanElementProps | null, HTMLSpanElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Span << VNodeFlags.ElementIdOffset),\n    \"span\",\n    null,\n    className,\n    null,\n  );\n}\nexport function strike(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Strike << VNodeFlags.ElementIdOffset),\n    \"strike\",\n    null,\n    className,\n    null,\n  );\n}\nexport function strong(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Strong << VNodeFlags.ElementIdOffset),\n    \"strong\",\n    null,\n    className,\n    null,\n  );\n}\nexport function style(className?: string): VNode<HTMLStyleElementProps | null, HTMLStyleElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Style << VNodeFlags.ElementIdOffset),\n    \"style\",\n    null,\n    className,\n    null,\n  );\n}\nexport function sub(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Sub << VNodeFlags.ElementIdOffset),\n    \"sub\",\n    null,\n    className,\n    null,\n  );\n}\nexport function sup(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Sup << VNodeFlags.ElementIdOffset),\n    \"sup\",\n    null,\n    className,\n    null,\n  );\n}\nexport function table(className?: string): VNode<HTMLTableElementProps | null, HTMLTableElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Table << VNodeFlags.ElementIdOffset),\n    \"table\",\n    null,\n    className,\n    null,\n  );\n}\nexport function tbody(className?: string): VNode<HTMLTableSectionElementProps | null, HTMLTableSectionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tbody << VNodeFlags.ElementIdOffset),\n    \"tbody\",\n    null,\n    className,\n    null,\n  );\n}\nexport function td(className?: string): VNode<HTMLTableDataCellElementProps | null, HTMLTableDataCellElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Td << VNodeFlags.ElementIdOffset),\n    \"td\",\n    null,\n    className,\n    null,\n  );\n}\nexport function template(className?: string): VNode<HTMLTemplateElementProps | null, HTMLTemplateElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Template << VNodeFlags.ElementIdOffset),\n    \"template\",\n    null,\n    className,\n    null,\n  );\n}\nexport function tfoot(className?: string): VNode<HTMLTableSectionElementProps | null, HTMLTableSectionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tfoot << VNodeFlags.ElementIdOffset),\n    \"tfoot\",\n    null,\n    className,\n    null,\n  );\n}\nexport function th(className?: string): VNode<HTMLTableHeaderCellElementProps | null, HTMLTableHeaderCellElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Th << VNodeFlags.ElementIdOffset),\n    \"th\",\n    null,\n    className,\n    null,\n  );\n}\nexport function thead(className?: string): VNode<HTMLTableSectionElementProps | null, HTMLTableSectionElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Thead << VNodeFlags.ElementIdOffset),\n    \"thead\",\n    null,\n    className,\n    null,\n  );\n}\nexport function time(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Time << VNodeFlags.ElementIdOffset),\n    \"time\",\n    null,\n    className,\n    null,\n  );\n}\nexport function title(className?: string): VNode<HTMLTitleElementProps | null, HTMLTitleElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Title << VNodeFlags.ElementIdOffset),\n    \"title\",\n    null,\n    className,\n    null,\n  );\n}\nexport function tr(className?: string): VNode<HTMLTableRowElementProps | null, HTMLTableRowElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tr << VNodeFlags.ElementIdOffset),\n    \"tr\",\n    null,\n    className,\n    null,\n  );\n}\nexport function track(className?: string): VNode<HTMLTrackElementProps | null, HTMLTrackElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Track << VNodeFlags.ElementIdOffset),\n    \"track\",\n    null,\n    className,\n    null,\n  );\n}\nexport function tt(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Tt << VNodeFlags.ElementIdOffset),\n    \"tt\",\n    null,\n    className,\n    null,\n  );\n}\nexport function u(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.U << VNodeFlags.ElementIdOffset),\n    \"u\",\n    null,\n    className,\n    null,\n  );\n}\nexport function ul(className?: string): VNode<HTMLUListElementProps | null, HTMLUListElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Ul << VNodeFlags.ElementIdOffset),\n    \"ul\",\n    null,\n    className,\n    null,\n  );\n}\nexport function wbr(className?: string): VNode<HTMLElementProps | null, HTMLElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.VoidElement | (TagId.Wbr << VNodeFlags.ElementIdOffset),\n    \"wbr\",\n    null,\n    className,\n    null,\n  );\n}\nexport function xmp(className?: string): VNode<HTMLPreElementProps | null, HTMLPreElement> {\n  return new VNode(\n    VNodeFlags.Element | (TagId.Xmp << VNodeFlags.ElementIdOffset),\n    \"xmp\",\n    null,\n    className,\n    null,\n  );\n}\n\n// Textarea / Input Elements:\nexport function textarea(className?: string): VNode<HTMLTextAreaElementProps | null, HTMLTextAreaElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.TextAreaElement | (TagId.Textarea << VNodeFlags.ElementIdOffset),\n    \"textarea\",\n    null,\n    className,\n    null,\n  );\n}\nexport function input(className?: string): VNode<HTMLInputElementProps | null, HTMLInputElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.InputElement | VNodeFlags.VoidElement | (TagId.Input << VNodeFlags.ElementIdOffset),\n    \"input\",\n    null,\n    className,\n    null,\n  );\n}\n\n// Media Elements:\nexport function audio(className?: string): VNode<HTMLAudioElementProps | null, HTMLAudioElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.MediaElement | (TagId.Audio << VNodeFlags.ElementIdOffset),\n    \"audio\",\n    null,\n    className,\n    null,\n  );\n}\n\nexport function video(className?: string): VNode<HTMLVideoElementProps | null, HTMLVideoElement> {\n  return new VNode(\n    VNodeFlags.Element | VNodeFlags.MediaElement | (TagId.Video << VNodeFlags.ElementIdOffset),\n    \"video\",\n    null,\n    className,\n    null,\n  );\n}\n","import * as tslib_1 from \"tslib\";\nimport { render, updateNextFrame, statefulComponent, Component, statelessComponent, connect, map, onInput } from \"ivi\";\nimport { div, input } from \"ivi-html\";\nimport Worker from \"worker-loader!./worker\";\nvar WORKER = new Worker();\nvar STATE = {\n    appState: 0 /* Ready */,\n    workerState: 0 /* Waiting */,\n    queryId: 0,\n    results: null,\n};\nfunction search(query) {\n    if (query) {\n        STATE.appState = 1 /* WaitingForQuery */;\n        WORKER.postMessage({ id: ++STATE.queryId, type: \"query\", query: query });\n    }\n    else {\n        STATE.appState = 0 /* Ready */;\n    }\n    STATE.results = null;\n    updateNextFrame();\n}\nfunction workerStateToText(s) {\n    switch (s) {\n        case 0 /* Waiting */:\n            return \"Waiting for a Web Worker\";\n        case 1 /* Started */:\n            return \"Worker is Ready\";\n        case 2 /* LoadingData */:\n            return \"Loading Documents\";\n        case 3 /* SavingData */:\n            return \"Saving Documents to the IndexedDB\";\n        case 4 /* IndexingData */:\n            return \"Indexing Documents\";\n    }\n    return \"\";\n}\nvar PLACEHOLDER = { placeholder: \"Type to search\" };\nvar SearchField = statefulComponent(/** @class */ (function (_super) {\n    tslib_1.__extends(class_1, _super);\n    function class_1() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.value = \"\";\n        _this.events = onInput(function (ev) {\n            search(_this.value = ev.target.value);\n        });\n        return _this;\n    }\n    class_1.prototype.render = function () {\n        return div(\"search-field\").c(input()\n            .a(PLACEHOLDER)\n            .e(this.events)\n            .value(this.value));\n    };\n    return class_1;\n}(Component)));\nvar Result = statelessComponent(function (r) { return (div(\"result\").c(div(\"result-score\").c(r.score), div(\"result-author\").c(r.comment.author), div(\"result-body\").c(r.comment.body))); });\nvar SearchResults = connect(function (prev) {\n    var appState = STATE.appState;\n    var results = STATE.results;\n    return (prev !== null && prev.appState === appState && prev.results === results) ? prev :\n        { appState: appState, results: results };\n}, function (_a) {\n    var appState = _a.appState, results = _a.results;\n    return (div(\"search-results\").c((appState === 0 /* Ready */) ?\n        (results ?\n            map(results, function (r, i) { return Result(r).k(i); }) :\n            null) :\n        div(\"spinner\")));\n});\nvar App = connect(function () { return STATE.workerState; }, function (workerState) { return div(\"main\").c((workerState === 5 /* Ready */) ?\n    div(\"search-view\").c(SearchField(), SearchResults()) :\n    div(\"main-progress\").c(div(\"spinner\"), div(\"main-progress-text\").c(workerStateToText(workerState)))); });\nWORKER.addEventListener(\"message\", function (e) {\n    if (typeof e.data !== \"number\") {\n        var data = e.data;\n        switch (data.type) {\n            case \"state\": {\n                STATE.workerState = data.state;\n                updateNextFrame();\n                break;\n            }\n            case \"query\": {\n                if (STATE.appState & 1 /* WaitingForQuery */) {\n                    if (STATE.queryId === data.id) {\n                        STATE.appState = 0 /* Ready */;\n                        STATE.results = data.results;\n                        updateNextFrame();\n                    }\n                }\n                break;\n            }\n        }\n    }\n});\nrender(App(), document.getElementById(\"app\"));\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9tYWluLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsTUFBTSxFQUFFLGVBQWUsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsa0JBQWtCLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxPQUFPLEVBQUUsTUFBTSxLQUFLLENBQUM7QUFDdkgsT0FBTyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsTUFBTSxVQUFVLENBQUM7QUFDdEMsT0FBTyxNQUFNLE1BQU0sd0JBQXdCLENBQUM7QUFRNUMsSUFBTSxNQUFNLEdBQUcsSUFBSSxNQUFNLEVBQUUsQ0FBQztBQUM1QixJQUFNLEtBQUssR0FBRztJQUNaLFFBQVEsZUFBZ0I7SUFDeEIsV0FBVyxpQkFBcUI7SUFDaEMsT0FBTyxFQUFFLENBQUM7SUFDVixPQUFPLEVBQUUsSUFBNkI7Q0FDdkMsQ0FBQztBQUVGLGdCQUFnQixLQUFhO0lBQzNCLElBQUksS0FBSyxFQUFFO1FBQ1QsS0FBSyxDQUFDLFFBQVEsMEJBQTJCLENBQUM7UUFDMUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxFQUFFLEVBQUUsRUFBRSxFQUFFLEtBQUssQ0FBQyxPQUFPLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxLQUFLLE9BQUEsRUFBd0IsQ0FBQyxDQUFDO0tBQ3pGO1NBQU07UUFDTCxLQUFLLENBQUMsUUFBUSxnQkFBaUIsQ0FBQztLQUNqQztJQUVELEtBQUssQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDO0lBQ3JCLGVBQWUsRUFBRSxDQUFDO0FBQ3BCLENBQUM7QUFFRCwyQkFBMkIsQ0FBYztJQUN2QyxRQUFRLENBQUMsRUFBRTtRQUNUO1lBQ0UsT0FBTywwQkFBMEIsQ0FBQztRQUNwQztZQUNFLE9BQU8saUJBQWlCLENBQUM7UUFDM0I7WUFDRSxPQUFPLG1CQUFtQixDQUFDO1FBQzdCO1lBQ0UsT0FBTyxtQ0FBbUMsQ0FBQztRQUM3QztZ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","import { VNodeFlags } from \"./flags\";\nimport { VNode } from \"./vnode\";\n\n/**\n * fragment is a variadic function that creates a children collection.\n *\n * @example\n *\n *     const content = children(\n *       h.p().c(\"Paragraph 1\"),\n *       h.p().c(\"Paragraph 2\"),\n *     );\n *\n *     render(\n *       h.div().c(\n *         h.h1().c(\"Title\"),\n *         content,\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param args - Children\n * @returns Virtual DOM collection\n */\nexport function fragment(...args: Array<VNode | string | number | null>): VNode | null;\n\n/**\n * fragment is a variadic function that creates a children collection.\n *\n * @example\n *\n *     const content = children(\n *       h.p().c(\"Paragraph 1\"),\n *       h.p().c(\"Paragraph 2\"),\n *     );\n *\n *     render(\n *       h.div().c(\n *         h.h1().c(\"Title\"),\n *         content,\n *       ),\n *       DOMContainer,\n *     );\n *\n * @returns Virtual DOM collection\n */\nexport function fragment(): VNode | null {\n  const args: Array<VNode | string | number | null> = arguments as any;\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n\n  for (let i = 0; i < args.length; ++i) {\n    let n = args[i];\n\n    if (n !== null) {\n      if (typeof n !== \"object\") {\n        n = new VNode<null>(VNodeFlags.Text, null, null, void 0, n);\n      }\n      const last = n._l;\n      if (prev !== null) {\n        n._l = prev;\n        prev._r = n;\n      } else {\n        first = n;\n      }\n      prev = last;\n    }\n  }\n  if (first !== null) {\n    first._l = prev!;\n  }\n\n  return first;\n}\n\n/**\n * map creates a children collection with the results of calling a provided function on every element in the calling\n * array.\n *\n * @example\n *\n *     render(\n *       h.div().c(\n *         map([1, 2, 3], (item) => h.div().k(item)),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param items - Array\n * @param fn - Function that produces an element for the children collection\n * @returns Virtual DOM collection\n */\nexport function map<T, U>(array: Array<T>, fn: (item: T, index: number) => VNode<U> | null): VNode<U> | null {\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n  for (let i = 0; i < array.length; ++i) {\n    const n = fn(array[i], i);\n    if (n !== null) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        if ((n._f & VNodeFlags.Key) === 0) {\n          throw new Error(`VNodes created with a map() function should have an explicit key`);\n        }\n        if (n._l !== n) {\n          throw new Error(`VNodes created with a map() function should be a singular nodes`);\n        }\n      }\n      if (prev !== null) {\n        n._l = prev;\n        prev._r = n;\n      } else {\n        first = n;\n      }\n      prev = n;\n    }\n  }\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n\n/**\n * mapRange creates a children collection with the results of calling a provided function on every number in the\n * provided range.\n *\n * @example\n *\n *     const items = [1, 2, 3];\n *\n *     render(\n *       h.div().c(\n *         mapRange(0, items.length, (i) => h.div().k(items[i])),\n *       ),\n *       DOMContainer,\n *     );\n *\n * @param start - Range start\n * @param end - Range end\n * @param fn - Function that produces an element for the children collection\n * @returns Virtual DOM collection\n */\nexport function mapRange<T>(start: number, end: number, fn: (idx: number) => VNode<T> | null): VNode<T> | null {\n  const length = end - start;\n  let first: VNode<any> | null = null;\n  let prev: VNode<any> | null = null;\n  while (start < length) {\n    const n = fn(start++);\n    if (n !== null) {\n      /* istanbul ignore else */\n      if (DEBUG) {\n        if ((n._f & VNodeFlags.Key) === 0) {\n          throw new Error(`VNodes created with a mapRange() function should have an explicit key`);\n        }\n        if (n._l !== n) {\n          throw new Error(`VNodes created with a mapRange() function should be a singular nodes`);\n        }\n      }\n      if (prev !== null) {\n        n._l = prev;\n        prev._r = n;\n      } else {\n        first = n;\n      }\n      prev = n;\n    }\n  }\n  if (first !== null) {\n    first._l = prev!;\n    first._f |= VNodeFlags.KeyedList;\n    return first;\n  }\n  return null;\n}\n"],"sourceRoot":""}